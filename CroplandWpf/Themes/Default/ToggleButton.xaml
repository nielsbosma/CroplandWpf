<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:a="clr-namespace:CroplandWpf.Attached"
                    xmlns:local="clr-namespace:CroplandWpf.Themes.Default">

	<Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushToggleButton_Background}"></Setter>
		<Setter Property="Height" Value="22"></Setter>
		<Setter Property="MinWidth" Value="40"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
		<Setter Property="Padding" Value="12,0"></Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="UseLayoutRounding" Value="True"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushToggleButton_Foreground}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="40"></ColumnDefinition>
							<ColumnDefinition></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<Border Grid.Column="0" x:Name="borderBackground" Background="{TemplateBinding Background}" CornerRadius="11"></Border>
						<Border Grid.Column="0" x:Name="borderBackground_IsChecked" Background="{DynamicResource brushToggleButton_Background_Checked}" CornerRadius="11" Opacity="0.0" BorderBrush="{DynamicResource brushToggleButton_Background_Disabled}"></Border>
						<Border Grid.Column="0" x:Name="borderBackground_Disabled" Background="{DynamicResource brushToggleButton_Background_Disabled}" CornerRadius="11" Opacity="0.0"></Border>
						<Grid Grid.Column="0" x:Name="gridTick" Margin="2,0" Width="18" Height="18" HorizontalAlignment="Left" VerticalAlignment="Center">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="transformTick" X="0.0" Y="0.0"></TranslateTransform>
							</Grid.RenderTransform>
							<Ellipse Fill="{DynamicResource brushToggleButton_Tick_Background}"></Ellipse>
							<!--<Ellipse x:Name="ellipseTick_Checked" Fill="{DynamicResource brushToggleButton_Tick_Background_Checked}" HorizontalAlignment="Left" Opacity="0.0"></Ellipse>-->
							<Ellipse x:Name="ellipseTick_Disabled" Fill="{DynamicResource brushToggleButton_Tick_Backround_Disabled}" Opacity="0.0"></Ellipse>
						</Grid>
						<ContentPresenter Grid.Column="1" x:Name="presenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
						<ContentPresenter Grid.Column="1" x:Name="presenterChecked" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:ToggleButtonHelper.CheckedContent)}" Opacity="0.0"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="transformTick" Storyboard.TargetProperty="X" From="0.0" To="18.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="borderBackground_IsChecked" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="transformTick" Storyboard.TargetProperty="X" From="18.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="borderBackground_IsChecked" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter TargetName="borderBackground_Disabled" Property="Background" Value="{DynamicResource brushControl_Background_Disabled_Dark}"></Setter>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToggleButtonHelper.HasCheckedContent)}" Value="True"></Condition>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"></Condition>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="presenter" Property="Opacity" Value="0.0"></Setter>
							<Setter TargetName="presenterChecked" Property="Opacity" Value="1.0"></Setter>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="borderBackground_IsChecked" Property="BorderThickness" Value="1"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ellipseTick_Disabled" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Disabled" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ellipseTick_Disabled" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Disabled" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>