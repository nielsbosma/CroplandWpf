<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:c="clr-namespace:CroplandWpf.Components"
					xmlns:h="clr-namespace:CroplandWpf.Helpers"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers">

	<Style x:Key="styleToggleButton_DateIntervalControl" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Dark}"></Setter>
		<Setter Property="Focusable" Value="False"></Setter>
		<Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
		<Setter Property="Padding" Value="15,0,50,0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" CornerRadius="{Binding ElementName=borderBackground, Path=CornerRadius}" Effect="{DynamicResource effectShadow_Large}"></Border>
						<Border x:Name="borderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Effect="{DynamicResource effectShadow_Small}"></Border>
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
						<Path x:Name="pathIndicator" Stretch="Fill" HorizontalAlignment="Right" VerticalAlignment="Center" Data="{DynamicResource geometryComboBox_SingleArrow}" Width="10" Height="5" Fill="{TemplateBinding Foreground}" Margin="10,0" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<ScaleTransform x:Name="transformIndicator" ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
							</Path.RenderTransform>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="pathIndicator" Property="RenderTransform" Value="{x:Null}"></Setter>
							<Setter TargetName="borderBackground" Property="CornerRadius" Value="2,2,0,0"></Setter>
							<Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"></Condition>
								<Condition Property="IsChecked" Value="False"></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="borderBackground" Property="Effect" Value="{x:Null}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="templateDateIntervalPreset" DataType="{x:Type h:DateIntervalPreset}">
		<TextBlock x:Name="textBlock" Foreground="#FF494949" Text="{Binding FriendlyName}"></TextBlock>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
				<Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource brushControl_Foreground_Light}"></Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Style x:Key="styleCalendar_DateIntervalControl" TargetType="Calendar">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="CalendarItemStyle" Value="{DynamicResource styleCalendarItem}"></Setter>
		<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource styleCalendarDayButton}"></Setter>
		<Setter Property="CalendarButtonStyle" Value="{DynamicResource styleCalendarButton}"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="ph:CalendarHelper.IsForceLooseMouseCaptureEnabled" Value="True"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Calendar">
					<Grid x:Name="gridRoot" Background="Transparent">
						<ph:CalendarHelper Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"></ph:CalendarHelper>
						<StackPanel x:Name="PART_Root" Margin="15,0,15,25">
							<CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}"/>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleCommandListBox_DateIntervalControl" TargetType="{x:Type c:CommandListBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderBrush" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer>
							<ItemsPresenter></ItemsPresenter>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type c:DateInervalControl}" TargetType="c:DateInervalControl">
		<Setter Property="MinHeight" Value="36"></Setter>
		<Setter Property="Height" Value="36"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:DateInervalControl">
					<Grid>
						<Border Grid.ColumnSpan="2" x:Name="borderEffectHost" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Small}" CornerRadius="2"></Border>
						<Border Grid.ColumnSpan="2" x:Name="borderEffectHost_Focused" Opacity="0.0" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Large}" CornerRadius="2"></Border>
						<Border CornerRadius="2" Background="{TemplateBinding Background}"></Border>
						<ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Padding="11" Style="{StaticResource styleToggleButton_DateIntervalControl}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupVisible, Mode=TwoWay}" Content="{TemplateBinding DisplayString}" />
						<Popup x:Name="PART_Popup" AllowsTransparency="True" HorizontalOffset="-5" VerticalOffset="-2">
							<Grid Background="Transparent">
								<Border Margin="5,2,8,10" Background="{DynamicResource brushControl_Background_Light}" Effect="{DynamicResource effectShadow_DateIntervalPopup}" CornerRadius="0,0,2,2">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="*"></RowDefinition>
											<RowDefinition Height="Auto"></RowDefinition>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"></ColumnDefinition>
											<ColumnDefinition Width="*"></ColumnDefinition>
											<ColumnDefinition Width="Auto" MinWidth="150"></ColumnDefinition>
										</Grid.ColumnDefinitions>
										<Calendar Grid.Row="0" Grid.Column="0" Style="{StaticResource styleCalendar_DateIntervalControl}" x:Name="calendar1" SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateTime1, Mode=TwoWay}" Margin="10,5" SelectionMode="SingleDate" DisplayDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateTime1}"></Calendar>
										<Calendar Grid.Row="0" Grid.Column="1" Style="{StaticResource styleCalendar_DateIntervalControl}" x:Name="calendar2" SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateTime2, Mode=TwoWay}" Margin="10,5" DisplayDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateTime2}" SelectionMode="SingleDate"></Calendar>
										<Rectangle Grid.Row="0" Grid.Column="1" Width="1" IsHitTestVisible="False" HorizontalAlignment="Left" Fill="#FFe5e5e5"></Rectangle>
										<Grid Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"></RowDefinition>
												<RowDefinition Height="*"></RowDefinition>
											</Grid.RowDefinitions>
											<TextBlock Grid.Row="0" Margin="10" FontWeight="Bold" Foreground="#FF354153">Presets</TextBlock>
											<c:CommandListBox Grid.Row="1" Style="{StaticResource styleCommandListBox_DateIntervalControl}" Command="{TemplateBinding ApplyPresetCommand}" ItemsSource="{TemplateBinding Presets}" ItemTemplate="{StaticResource templateDateIntervalPreset}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIntervalPreset, Mode=OneWay}"></c:CommandListBox>
										</Grid>
										<Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" IsHitTestVisible="False" Width="1" HorizontalAlignment="Left" Fill="#FFe5e5e5"></Rectangle>
										<Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Height="1" VerticalAlignment="Top" Fill="#FFe5e5e5"></Rectangle>
										<Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"></ColumnDefinition>
												<ColumnDefinition Width="Auto"></ColumnDefinition>
											</Grid.ColumnDefinitions>
											<TextBlock Grid.Column="0" Margin="15,5,10,5" Opacity="0.6" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{TemplateBinding InitialIntervalString}"></TextBlock>
											<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,10,10,10" HorizontalAlignment="Right" VerticalAlignment="Center">
												<Button Command="{TemplateBinding AbortCommand}" Style="{DynamicResource styleButton_InputDialog_Control_NegativeAction}" VerticalAlignment="Center" Margin="0">Abort</Button>
												<Button Command="{TemplateBinding UpdateCommand}" Margin="20,0,0,0" VerticalAlignment="Center" Padding="13,6">Update</Button>
											</StackPanel>
										</Grid>
									</Grid>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>