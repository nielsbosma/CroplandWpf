<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:a="clr-namespace:CroplandWpf.Attached"
					xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers"
                    xmlns:c="clr-namespace:CroplandWpf.Components">

	<Style x:Key="styleModifiedInputTextBox_ImageResizeControl" TargetType="c:ModifiedInputTextBox">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Dark}"></Setter>
		<Setter Property="FontSize" Value="9.5pt"></Setter>
		<Setter Property="MinHeight" Value="30"></Setter>
		<Setter Property="MinWidth" Value="75"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="a:VisualHelper.HeaderAlignment" Value="Left"></Setter>
		<Setter Property="a:VisualHelper.FooterAlignment" Value="Right"></Setter>
		<Setter Property="a:VisualHelper.HeaderHorizontalAlignment" Value="Right"></Setter>
		<Setter Property="a:VisualHelper.FooterHorizontalAlignment" Value="Left"></Setter>
		<Setter Property="a:VisualHelper.HeaderVerticalAlignment" Value="Center"></Setter>
		<Setter Property="a:VisualHelper.FooterVerticalAlignment" Value="Center"></Setter>
		<Setter Property="InputModifierType" Value="{x:Type c:SizeValueTextModifier}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:ModifiedInputTextBox">
					<c:HeaderFooterContentControl HeaderFooterPropertiesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}">
						<Grid>
							<Border x:Name="borderEffectHost" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Small}"></Border>
							<Border x:Name="borderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:VisualHelper.CornerRadius)}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
								<Grid>
									<ph:KeyboardFocusRedirectControl FocusTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"></ph:KeyboardFocusRedirectControl>
									<ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource styleScrollViewer_TextBox}" Margin="6,0"></ScrollViewer>
									<Border x:Name="borderFocusVisual" Opacity="0.0" IsHitTestVisible="False" BorderBrush="{DynamicResource brushControl_Background_Dark}" BorderThickness="1" CornerRadius="{Binding ElementName=borderBackground, Path=CornerRadius}"></Border>
								</Grid>
							</Border>
						</Grid>
					</c:HeaderFooterContentControl>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderFocusVisual" Storyboard.TargetProperty="Opacity" From="0.0" To="0.5" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderFocusVisual" Storyboard.TargetProperty="Opacity" From="0.5" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleCheckBox_ImageResizeControl" TargetType="CheckBox">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"></Setter>
		<Setter Property="Height" Value="24"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid Background="Transparent">
						<Rectangle ></Rectangle>
						<!--<Ellipse x:Name="ellipseChecked" Opacity="0.0" Fill="{DynamicResource brushControl_Background_Light}" Stroke="#FFa4a4a4" StrokeThickness="1"></Ellipse>-->
						<Path Focusable="False" Data="{DynamicResource geometryIcon_SizeConstraint}" Margin="3" Stretch="Uniform" Stroke="{DynamicResource brushSizeConstraintIcon}" Fill="{DynamicResource brushSizeConstraintIcon}" SnapsToDevicePixels="False" UseLayoutRounding="False"></Path>
						<Path x:Name="pathOverlay_MouseOver" Opacity="0.0" Focusable="False" Data="{DynamicResource geometryIcon_SizeConstraint}" Margin="3" Stretch="Uniform" Stroke="{DynamicResource brushControl_Background_Dark}" Fill="{DynamicResource brushControl_Background_Dark}" SnapsToDevicePixels="False" UseLayoutRounding="False"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="pathOverlay_MouseOver" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="pathOverlay_MouseOver" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="templateResizeModeValue" DataType="{x:Type c:ResizeMode}">
		<TextBlock x:Name="textBlock_Value"></TextBlock>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding}" Value="{x:Static c:ResizeMode.Absolute}">
				<Setter TargetName="textBlock_Value" Property="Text" Value="Pixels"></Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding}" Value="{x:Static c:ResizeMode.Relative}">
				<Setter TargetName="textBlock_Value" Property="Text" Value="Percent"></Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Style x:Key="{x:Type c:ImageResizeControl}" TargetType="c:ImageResizeControl">
		<Setter Property="MinWidth" Value="252"></Setter>
		<Setter Property="BorderBrush" Value="Transparent"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:ImageResizeControl">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
						<Grid Grid.IsSharedSizeScope="True" KeyboardNavigation.TabNavigation="Cycle">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
								<ColumnDefinition Width="Auto"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition></RowDefinition>
								<RowDefinition></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
							</Grid.RowDefinitions>
							<c:ModifiedInputTextBox Grid.Row="0" IsTabStop="True" KeyboardNavigation.TabIndex="0" Grid.Column="0" Style="{StaticResource styleModifiedInputTextBox_ImageResizeControl}" Margin="0,4" a:VisualHelper.Header="Width:" a:VisualHelper.HeaderSharedGroupName="g1" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TargetWidth, Mode=TwoWay, UpdateSourceTrigger=Explicit}" ImmediateTargetRefresh="True"></c:ModifiedInputTextBox>
							<c:ModifiedInputTextBox Grid.Row="1" Grid.Column="0" IsTabStop="True" KeyboardNavigation.TabIndex="2" Style="{StaticResource styleModifiedInputTextBox_ImageResizeControl}" a:VisualHelper.Header="Height:" a:VisualHelper.HeaderSharedGroupName="g1" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TargetHeight, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Margin="0,4" ImmediateTargetRefresh="True"></c:ModifiedInputTextBox>
							<ComboBox Grid.Row="0" Grid.Column="1" Margin="10,4" IsTabStop="True" KeyboardNavigation.TabIndex="1" Style="{DynamicResource styleComboBox_Light}" ItemsSource="{TemplateBinding AvailableResizeModes}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ResizeMode, Mode=TwoWay}" ItemTemplate="{StaticResource templateResizeModeValue}" Width="88"></ComboBox>
							<ComboBox x:Name="cb" Grid.Row="1" Grid.Column="1" Margin="10,4" Style="{DynamicResource styleComboBox_Light}"  IsTabStop="True" KeyboardNavigation.TabIndex="3" ItemsSource="{TemplateBinding AvailableResizeModes}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ResizeMode, Mode=TwoWay}" ItemTemplate="{StaticResource templateResizeModeValue}" Width="88"></ComboBox>
							<Grid Grid.Column="2" Grid.RowSpan="2" Margin="5,0" Focusable="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition></ColumnDefinition>
									<ColumnDefinition></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Grid Grid.Column="0" x:Name="gridConstraintLine" Margin="0,4" Opacity="0.0">
									<Grid.RowDefinitions>
										<RowDefinition Height="0.5*"></RowDefinition>
										<RowDefinition Height="0.5*"></RowDefinition>
										<RowDefinition Height="0.5*"></RowDefinition>
										<RowDefinition Height="0.5*"></RowDefinition>
										<RowDefinition Height="0.5*"></RowDefinition>
									</Grid.RowDefinitions>
									<Rectangle Grid.Row="1" Height="1" VerticalAlignment="Top" Fill="{DynamicResource brushControl_Background_Dark}"></Rectangle>
									<Rectangle Grid.Row="1" Width="1" HorizontalAlignment="Right" Fill="{DynamicResource brushControl_Background_Dark}"></Rectangle>
									<Rectangle Grid.Row="3" Height="1" VerticalAlignment="Bottom" Fill="{DynamicResource brushControl_Background_Dark}"></Rectangle>
									<Rectangle Grid.Row="3" Width="1" HorizontalAlignment="Right" Fill="{DynamicResource brushControl_Background_Dark}"></Rectangle>
								</Grid>
								<CheckBox Grid.ColumnSpan="2" Focusable="False" IsTabStop="False" Style="{StaticResource  styleCheckBox_ImageResizeControl}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=KeepConstraint, Mode=TwoWay}" VerticalAlignment="Center"></CheckBox>
							</Grid>
							<Button Grid.Row="2" Grid.ColumnSpan="2" x:Name="buttonApply" Focusable="False" IsTabStop="False" Command="{TemplateBinding ApplyCommand}" HorizontalAlignment="Center" Margin="0,4,0,0">Apply</Button>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="KeepConstraint" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="gridConstraintLine" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="gridConstraintLine" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>