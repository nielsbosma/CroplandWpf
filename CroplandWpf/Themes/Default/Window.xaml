<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:a="clr-namespace:CroplandWpf.Attached"
					xmlns:c="clr-namespace:CroplandWpf.Components"
					xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers"
					xmlns:h="clr-namespace:CroplandWpf.Helpers">

	<Style x:Key="styleThumb_Window_Resize" TargetType="c:WindowControlThumb">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:WindowControlThumb">
					<Grid x:Name="gridRoot" Background="{x:Null}">
						<Rectangle x:Name="rect" Fill="Transparent" MinHeight="3" MinWidth="3"></Rectangle>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Role" Value="ResizeLeft">
							<!--<Setter TargetName="rect" Property="Fill" Value="DarkGray"></Setter>-->
							<Setter Property="HorizontalAlignment" Value="Left"></Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeTop">
							<!--<Setter TargetName="rect" Property="Fill" Value="DarkGray"></Setter>-->
							<Setter Property="VerticalAlignment" Value="Top"></Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeRight">
							<!--<Setter TargetName="rect" Property="Fill" Value="DarkGray"></Setter>-->
							<Setter Property="HorizontalAlignment" Value="Right"></Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeBottom">
							<!--<Setter TargetName="rect" Property="Fill" Value="DarkGray"></Setter>-->
							<Setter Property="VerticalAlignment" Value="Bottom"></Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeLeftTop">
							<Setter Property="Width" Value="9"></Setter>
							<Setter Property="Height" Value="9"></Setter>
							<Setter TargetName="gridRoot" Property="Clip">
								<Setter.Value>
									<CombinedGeometry GeometryCombineMode="Exclude">
										<CombinedGeometry.Geometry1>
											<RectangleGeometry Rect="0,0,9,9"></RectangleGeometry>
										</CombinedGeometry.Geometry1>
										<CombinedGeometry.Geometry2>
											<RectangleGeometry>
												<RectangleGeometry.Rect>
													<Rect X="3" Y="3" Width="6" Height="6"></Rect>
												</RectangleGeometry.Rect>
											</RectangleGeometry>
										</CombinedGeometry.Geometry2>
									</CombinedGeometry>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeRightTop">
							<Setter Property="Width" Value="9"></Setter>
							<Setter Property="Height" Value="9"></Setter>
							<Setter TargetName="gridRoot" Property="Clip">
								<Setter.Value>
									<CombinedGeometry GeometryCombineMode="Exclude">
										<CombinedGeometry.Geometry1>
											<RectangleGeometry Rect="0,0,9,9"></RectangleGeometry>
										</CombinedGeometry.Geometry1>
										<CombinedGeometry.Geometry2>
											<RectangleGeometry>
												<RectangleGeometry.Rect>
													<Rect X="0" Y="3" Width="6" Height="6"></Rect>
												</RectangleGeometry.Rect>
											</RectangleGeometry>
										</CombinedGeometry.Geometry2>
									</CombinedGeometry>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeLeftBottom">
							<Setter Property="Width" Value="9"></Setter>
							<Setter Property="Height" Value="9"></Setter>
							<Setter TargetName="gridRoot" Property="Clip">
								<Setter.Value>
									<CombinedGeometry GeometryCombineMode="Exclude">
										<CombinedGeometry.Geometry1>
											<RectangleGeometry Rect="0,0,9,9"></RectangleGeometry>
										</CombinedGeometry.Geometry1>
										<CombinedGeometry.Geometry2>
											<RectangleGeometry>
												<RectangleGeometry.Rect>
													<Rect X="3" Y="0" Width="6" Height="6"></Rect>
												</RectangleGeometry.Rect>
											</RectangleGeometry>
										</CombinedGeometry.Geometry2>
									</CombinedGeometry>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Role" Value="ResizeRightBottom">
							<Setter Property="Width" Value="9"></Setter>
							<Setter Property="Height" Value="9"></Setter>
							<Setter TargetName="gridRoot" Property="Clip">
								<Setter.Value>
									<CombinedGeometry GeometryCombineMode="Exclude">
										<CombinedGeometry.Geometry1>
											<RectangleGeometry Rect="0,0,9,9"></RectangleGeometry>
										</CombinedGeometry.Geometry1>
										<CombinedGeometry.Geometry2>
											<RectangleGeometry>
												<RectangleGeometry.Rect>
													<Rect X="0" Y="0" Width="6" Height="6"></Rect>
												</RectangleGeometry.Rect>
											</RectangleGeometry>
										</CombinedGeometry.Geometry2>
									</CombinedGeometry>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Type c:WindowResizer}" TargetType="c:WindowResizer">
		<!--<Setter Property="IsResizeEnabled" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=(h:WindowHelper.AllowResize)}"></Setter>
		<Setter Property="WindowState" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}"></Setter>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:WindowResizer">
					<Grid Grid.RowSpan="2" Grid.ColumnSpan="3" x:Name="gridResizer" Background="{x:Null}">
						<Grid.RowDefinitions>
							<RowDefinition Height="9"></RowDefinition>
							<RowDefinition Height="*"></RowDefinition>
							<RowDefinition Height="9"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="9"></ColumnDefinition>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="9"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<c:WindowControlThumb Grid.Row="0" Grid.Column="0" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeLeftTop"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="0" Grid.Column="1" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeTop"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="0" Grid.Column="2" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeRightTop"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="1" Grid.Column="0" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeLeft"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="1" Grid.Column="2" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeRight"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="2" Grid.Column="0" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeLeftBottom"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="2" Grid.Column="1" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeBottom"></c:WindowControlThumb>
						<c:WindowControlThumb Grid.Row="2" Grid.Column="2" Style="{StaticResource styleThumb_Window_Resize}" Role="ResizeRightBottom"></c:WindowControlThumb>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="gridResizer" Property="IsHitTestVisible" Value="False"></Setter>
						</Trigger>
						<Trigger Property="IsResizeEnabled" Value="False">
							<Setter Property="Visibility" Value="Collapsed"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleThumb_Window_Move" TargetType="c:WindowControlThumb">
		<Setter Property="Cursor" Value="SizeAll"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:WindowControlThumb">
					<Border Background="Transparent"></Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
							<Setter Property="Cursor" Value="Arrow"></Setter>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButton_Window_Close" TargetType="c:WindowControlButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="MinWidth" Value="20"></Setter>
		<Setter Property="MinHeight" Value="20"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:WindowControlButton">
					<Grid Background="Transparent">
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}"></Border>
						<Path VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Stretch="Fill" Fill="{DynamicResource brushControl_Background_Light}" Stroke="{DynamicResource brushControl_Background_Light}" StrokeThickness="1" Data="{DynamicResource geometryCross}" RenderTransformOrigin="0.5,0.5"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type Window}" TargetType="Window">
		<Setter Property="h:WindowHelper.MaximizeFixEnabled" Value="True"></Setter>
		<Setter Property="FontFamily" Value="pack://application:,,,/CroplandWpf;component/Fonts/#Roboto"></Setter>
		<Setter Property="FontSize" Value="9.5pt"></Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="UseLayoutRounding" Value="True"></Setter>
		<Setter Property="AllowsTransparency" Value="True"></Setter>
		<Setter Property="ResizeMode" Value="NoResize"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="Padding" Value="5"></Setter>
		<Setter Property="a:VisualHelper.DisableFocusVisualStyle" Value="True"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Grid Background="Transparent">
						<Border x:Name="border_EffectHost" Margin="25,6,25,31" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Window}" CornerRadius="{Binding ElementName=borderClip, Path=CornerRadius}">
						</Border>
						<ph:CroppedWindowBackgroundHelper x:Name="backgroundHelper" HeaderSectionHeight="{Binding ElementName=rowHeader, Path=ActualHeight}" TotalHeight="{Binding ElementName=borderClip, Path=ActualHeight}" ContentBackgroundColor="{DynamicResource colorControl_Background_Light}" HeaderBackgroundColor="{DynamicResource colorControl_Background_Dark}"></ph:CroppedWindowBackgroundHelper>
						<AdornerDecorator Name="adornerDecorator">
							<c:ClippingBorder x:Name="borderClip" CornerRadius="6" Background="{Binding ElementName=backgroundHelper, Path=WindowBackgroundBrush, Mode=OneWay}" Margin="24,5,24,30">
								<Grid x:Name="gridRoot">
									<Grid.RowDefinitions>
										<RowDefinition x:Name="rowHeader" Height="52"></RowDefinition>
										<RowDefinition></RowDefinition>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition></ColumnDefinition>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
									</Grid.ColumnDefinitions>

									<a:RootAdornerLayerHelper Window="{Binding RelativeSource={RelativeSource TemplatedParent}}"></a:RootAdornerLayerHelper>

									<!--<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{DynamicResource brushControl_Background_Dark}" CornerRadius="1"></Border>-->

									<c:WindowControlThumb Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource styleThumb_Window_Move}" Role="Move"></c:WindowControlThumb>

									<!--<TextBlock Grid.Row="0" Grid.Column="0" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}" FontSize="10.5pt" Margin="18,0" Foreground="{DynamicResource brushControl_Foreground_Light}"></TextBlock>-->

									<Rectangle Grid.Row="0" Grid.Column="0" Width="100" IsHitTestVisible="False" HorizontalAlignment="Left" Margin="20,5" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:VisualHelper.IconBrush)}"></Rectangle>

									<Menu Grid.Row="0" Grid.Column="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:MenuHelper.ItemsSource)}" HorizontalAlignment="Left"></Menu>

									<c:WindowControlButton Grid.Row="0" Grid.Column="2" Role="Close" Style="{StaticResource styleButton_Window_Close}" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"></c:WindowControlButton>

									<ContentPresenter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="{TemplateBinding Padding}"></ContentPresenter>

									<c:OverlayHost ScopeName="main_window"></c:OverlayHost>

									<c:WindowResizer Grid.RowSpan="2" Grid.ColumnSpan="3"></c:WindowResizer>
								</Grid>
							</c:ClippingBorder>
						</AdornerDecorator>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="gridRoot" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="CornerRadius" Value="0,0,0,0"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="styleButton_Window_Close_Light" TargetType="c:WindowControlButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="MinWidth" Value="20"></Setter>
		<Setter Property="MinHeight" Value="20"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:WindowControlButton">
					<Grid Background="Transparent">
						<Ellipse Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{DynamicResource brushButton_WindowClose_Background_Light}"></Ellipse>
						<Ellipse x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{DynamicResource brushControl_Background_Dark}"></Ellipse>
						<Path x:Name="pathCross" VerticalAlignment="Center" HorizontalAlignment="Center" Width="12" Height="12" Stretch="Fill" Fill="{DynamicResource brushButton_WindowClose_Icon_Background}" Data="{DynamicResource geometryCross}" RenderTransformOrigin="0.5,0.5"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="pathCross" Property="Fill" Value="{DynamicResource brushControl_Foreground_Light}"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleWindow_Light" TargetType="Window">
		<Setter Property="h:WindowHelper.MaximizeFixEnabled" Value="True"></Setter>
		<Setter Property="FontFamily" Value="pack://application:,,,/CroplandWpf;component/Fonts/#Roboto"></Setter>
		<Setter Property="FontSize" Value="9.5pt"></Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="UseLayoutRounding" Value="True"></Setter>
		<Setter Property="AllowsTransparency" Value="True"></Setter>
		<Setter Property="ResizeMode" Value="NoResize"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushWindowBackground_Dark}"></Setter>
		<Setter Property="Padding" Value="5"></Setter>
		<!--<Setter Property="a:VisualHelper.IconBrush" Value="{DynamicResource brushAppIcon_FileStar}"></Setter>-->
		<Setter Property="MinWidth" Value="200"></Setter>
		<Setter Property="MinHeight" Value="150"></Setter>
		<!--<Setter Property="ph:ButtonHelper.ConvertToUpper" Value="True"></Setter>-->
		<Setter Property="a:VisualHelper.DisableFocusVisualStyle" Value="True"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Grid Background="Transparent">
						<Border x:Name="border_EffectHost" Margin="{Binding ElementName=borderClip, Path=Margin}" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Window_Light}" CornerRadius="{Binding ElementName=borderClip, Path=CornerRadius}">
						</Border>

						<AdornerDecorator x:Name="adornerDecorator">
							<c:ClippingBorder x:Name="borderClip" CornerRadius="6" Background="{TemplateBinding Background}" Margin="24,5,24,37">
								<Grid x:Name="gridRoot">
									<Grid.RowDefinitions>
										<RowDefinition Height="69"></RowDefinition>
										<RowDefinition></RowDefinition>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition></ColumnDefinition>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
									</Grid.ColumnDefinitions>

									<a:RootAdornerLayerHelper Window="{Binding RelativeSource={RelativeSource TemplatedParent}}"></a:RootAdornerLayerHelper>

									<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{DynamicResource brushControl_Background_Light}" CornerRadius="1"></Border>

									<c:WindowControlThumb Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource styleThumb_Window_Move}" Role="Move"></c:WindowControlThumb>

									<!--<TextBlock Grid.Row="0" Grid.Column="0" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}" FontSize="13.5pt" Margin="30,0" Foreground="{DynamicResource brushWindow_Title_Foreground_Dark}"></TextBlock>-->

									<Rectangle Grid.Row="0" Grid.Column="0" Width="100" IsHitTestVisible="False" HorizontalAlignment="Left" Margin="20,5" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:VisualHelper.IconBrush)}"></Rectangle>

									<Menu Grid.Row="0" Grid.Column="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:MenuHelper.ItemsSource)}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Style="{DynamicResource styleMenu_Light}" Height="69"></Menu>

									<c:WindowControlButton Grid.Row="0" Grid.Column="2" Role="Close" Style="{StaticResource styleButton_Window_Close_Light}" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="18.5,0"></c:WindowControlButton>

									<ContentPresenter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="{TemplateBinding Padding}"></ContentPresenter>

									<c:OverlayHost Grid.RowSpan="2" Grid.ColumnSpan="3" ScopeName="main_window"></c:OverlayHost>

									<c:WindowResizer Grid.RowSpan="2" Grid.ColumnSpan="3"></c:WindowResizer>
								</Grid>
							</c:ClippingBorder>
						</AdornerDecorator>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="gridRoot" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="CornerRadius" Value="0,0,0,0"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButton_ToolWindow_Close_Dark" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="MinWidth" Value="40"></Setter>
		<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"></Setter>
		<Setter Property="MinHeight" Value="40"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent">
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}"></Border>
						<Path VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Stretch="Fill" Fill="{DynamicResource brushControl_Background_Light}" Stroke="{DynamicResource brushControl_Background_Light}" StrokeThickness="1" Data="{DynamicResource geometryCross}" RenderTransformOrigin="0.5,0.5"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleToolWindow_Dark" TargetType="Window">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="MinHeight" Value="150"></Setter>
		<Setter Property="MinWidth" Value="200"></Setter>
		<Setter Property="Padding" Value="10"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
		<Setter Property="WindowState" Value="Normal"></Setter>
		<Setter Property="AllowsTransparency" Value="True"></Setter>
		<Setter Property="ResizeMode" Value="NoResize"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="FontFamily" Value="pack://application:,,,/CroplandWpf;component/Fonts/#Roboto"></Setter>
		<Setter Property="FontSize" Value="9.5pt"></Setter>
		<Setter Property="UseLayoutRounding" Value="True"></Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"></Setter>
		<Setter Property="h:WindowHelper.MaximizeFixEnabled" Value="True"></Setter>
		<Setter Property="a:VisualHelper.DisableFocusVisualStyle" Value="True"></Setter>
		<!--<Setter Property="ph:ButtonHelper.ConvertToUpper" Value="True"></Setter>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Grid Background="Transparent">
						<Border x:Name="border_EffectHost" Margin="{Binding ElementName=borderClip, Path=Margin}" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Window}" CornerRadius="{Binding ElementName=borderClip, Path=CornerRadius}" BorderBrush="{DynamicResource brushControl_Background_Dark}" BorderThickness="0,1,0,0">
						</Border>

						<AdornerDecorator Name="adornerDecorator">
							<c:ClippingBorder x:Name="borderClip" CornerRadius="3" Margin="24,5,24,30">
								<c:ClippingBorder.Background>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" MappingMode="Absolute">
										<GradientStop Offset="0.0" Color="{DynamicResource colorControl_Background_Dark}"></GradientStop>
										<GradientStop Offset="10.0" Color="{DynamicResource colorControl_Background_Light}"></GradientStop>
									</LinearGradientBrush>
								</c:ClippingBorder.Background>
								<Grid x:Name="gridRoot">
									<Grid.RowDefinitions>
										<RowDefinition Height="42"></RowDefinition>
										<RowDefinition></RowDefinition>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition></ColumnDefinition>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
									</Grid.ColumnDefinitions>

									<a:RootAdornerLayerHelper Window="{Binding RelativeSource={RelativeSource TemplatedParent}}"></a:RootAdornerLayerHelper>

									<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{DynamicResource brushToolWindow_Header_Background}" CornerRadius="{Binding ElementName=borderClip, Path=CornerRadius}"></Border>

									<c:WindowControlThumb Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource styleThumb_Window_Move}" Role="Move"></c:WindowControlThumb>

									<TextBlock Grid.Row="0" Grid.Column="0" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}" FontSize="10.5pt" Margin="16,0" Foreground="{DynamicResource brushControl_Foreground_Light}"></TextBlock>

									<!--<Menu Grid.Row="0" Grid.Column="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(a:MenuHelper.ItemsSource)}" HorizontalAlignment="Left"></Menu>-->

									<c:WindowControlButton Grid.Row="0" Grid.Column="2" Role="Close" Style="{StaticResource styleButton_ToolWindow_Close_Dark}"></c:WindowControlButton>

									<Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="{TemplateBinding Background}"></Border>

									<ContentPresenter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="{TemplateBinding Padding}" MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding MinWidth}"></ContentPresenter>

									<c:WindowResizer Grid.RowSpan="2" Grid.ColumnSpan="3"></c:WindowResizer>
									<!--<c:OverlayHost ScopeName="main_window"></c:OverlayHost>-->
								</Grid>
							</c:ClippingBorder>
						</AdornerDecorator>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="gridRoot" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="Margin" Value="0"></Setter>
							<Setter TargetName="borderClip" Property="CornerRadius" Value="0,0,0,0"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>