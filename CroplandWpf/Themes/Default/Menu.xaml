<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mvvm="clr-namespace:CroplandWpf.MVVM"
                    xmlns:local="clr-namespace:CroplandWpf.Themes.Default">

	<DataTemplate x:Key="{x:Type mvvm:vmMenuItem}" DataType="{x:Type mvvm:vmMenuItem}">
		<TextBlock Text="{Binding Header}"></TextBlock>
	</DataTemplate>
	
	<DataTemplate DataType="{x:Type mvvm:vmMenuItemSeparator}"></DataTemplate>
	
	<HierarchicalDataTemplate x:Key="{x:Type mvvm:vmMenuItemsContainer}" DataType="{x:Type mvvm:vmMenuItemsContainer}" ItemsSource="{Binding Items}" >
		<TextBlock Text="{Binding Header}"></TextBlock>
	</HierarchicalDataTemplate>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
		<Setter Property="Height" Value="2"/>
		<Setter Property="Margin" Value="0,6"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Rectangle Fill="{DynamicResource brushMenu_Separator_Background}"></Rectangle>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
		<Grid>
			<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Dark}"></Border>
			<Border x:Name="borderBackground_Highlight" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}"></Border>
			<ContentPresenter x:Name="presenter" TextBlock.FontSize="10.5pt" TextBlock.Foreground="{DynamicResource brushControl_Foreground_Light}" Margin="18" ContentSource="Header" RecognizesAccessKey="True" />
			<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="None">
				<Border Name="borderSubMenu" SnapsToDevicePixels="True" Background="{DynamicResource brushControl_Background_Light}" BorderBrush="{DynamicResource brushMenu_DropDown_Border}" BorderThickness="1" Effect="{DynamicResource effectShadow_Small}" Margin="2,1,2,4">
					<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,4" />
				</Border>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
		<Grid>
			<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Dark}" CornerRadius="2"></Border>
			<Border x:Name="borderBackground_Highlight" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}" CornerRadius="2"></Border>
			<ContentPresenter x:Name="presenter" TextBlock.FontSize="10.5pt" TextBlock.Foreground="{DynamicResource brushControl_Foreground_Light}" Margin="18" ContentSource="Header" RecognizesAccessKey="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
		<Grid x:Name="gridRoot" Margin="6,0">
			<Border Name="borderBackground" CornerRadius="2" Background="{DynamicResource brushControl_Background_Light}"></Border>
			<Border x:Name="borderBackground_Highlight" Opacity="0.0" Background="{DynamicResource brushMenuItem_MouseOver_Background}" CornerRadius="2"></Border>
			<Grid x:Name="gridContentHost" VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="menu_inputgesture"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Grid.Column="0" x:Name="presenter" Margin="6" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock Grid.Column="1" x:Name="textBlock_InputGesture" Text="{TemplateBinding InputGestureText}" Foreground="{DynamicResource brushMenu_Submenu_Gesture_Foreground}" Margin="9,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
			</Grid>
			<Separator x:Name="separator" VerticalAlignment="Center" Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" Visibility="Collapsed"></Separator>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}" Value="{x:Static mvvm:vmMenuItem.SeparatorHeader}">
				<Setter TargetName="gridContentHost" Property="Visibility" Value="Collapsed"></Setter>
				<Setter Property="Margin" Value="0,3"/>
				<Setter Property="IsHitTestVisible" Value="False"></Setter>
				<Setter TargetName="separator" Property="Visibility" Value="Visible"></Setter>
				<Setter TargetName="gridRoot" Property="Margin" Value="0"></Setter>
			</DataTrigger>
			<!--<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>-->
			<!--<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>-->
			<Trigger Property="IsHighlighted" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
		<Grid Margin="6,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="3" x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" CornerRadius="2"></Border>
			<Border Grid.ColumnSpan="3" x:Name="borderBackground_Highlight" Opacity="0.0" Background="{DynamicResource brushMenuItem_MouseOver_Background}" CornerRadius="2"></Border>
			<Border Grid.ColumnSpan="3" x:Name="borderBackground_SubmenuOpen" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}" CornerRadius="2"></Border>
			<ContentPresenter Grid.Column="0" Name="presenter" ContentSource="Header" RecognizesAccessKey="True" Margin="6" />
			<TextBlock x:Name="InputGestureText" Grid.Column="1" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
			<Path Grid.Column="2" x:Name="pathArrow" Width="7" Height="12" Stretch="Fill" Fill="{DynamicResource brushMenuItem_Arrow_Background}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,12,0" Data="{DynamicResource geometryShevron_Right}" />
			<Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="None">
				<Border Name="borderSubMenu" Margin="5,1,5,10" SnapsToDevicePixels="True" Background="{DynamicResource brushControl_Background_Light}" BorderBrush="{DynamicResource brushMenu_DropDown_Border}" BorderThickness="1" Effect="{DynamicResource effectShadow_Large}">
					<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,4" />
				</Border>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_Highlight" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsSubmenuOpen" Value="True">
				<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource brushControl_Foreground_Light}"></Setter>
				<Setter TargetName="pathArrow" Property="Fill" Value="{DynamicResource brushMenuItem_Arrow_Background_MouseOver}"></Setter>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_SubmenuOpen" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="borderBackground_SubmenuOpen" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="presenter" Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
		<Setter Property="ItemsSource" Value="{Binding Items, FallbackValue={x:Null}}"></Setter>
		<Setter Property="Header" Value="{Binding Header}"></Setter>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
				<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Command" Value="{Binding Command}"></Setter>
				<Setter Property="CommandParameter" Value="{Binding CommandParameter}"></Setter>
				<Setter Property="InputGestureText" Value="{Binding Gesture.DisplayString}"></Setter>
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
				<Setter Property="MinWidth" Value="250"></Setter>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Command" Value="{Binding Command}"></Setter>
				<Setter Property="CommandParameter" Value="{Binding CommandParameter}"></Setter>
				<Setter Property="InputGestureText" Value="{Binding GestureString}"></Setter>
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
				<Setter Property="MinWidth" Value="250"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="{x:Type Menu}" TargetType="Menu">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Dark}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Menu">
					<Border Background="{TemplateBinding Background}">
						<ItemsPresenter></ItemsPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>