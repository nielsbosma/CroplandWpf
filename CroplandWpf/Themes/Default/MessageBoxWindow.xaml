<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:c="clr-namespace:CroplandWpf.Components"
					xmlns:a="clr-namespace:CroplandWpf.Attached"
                    xmlns:local="clr-namespace:CroplandWpf.Themes.Default">

	<DataTemplate x:Key="templateMessageBoxContent_Default">
		<TextBlock Text="{Binding}"></TextBlock>
	</DataTemplate>

	<Style x:Key="styleButton_MessageBox" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Dark}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Light}"></Setter>
		<Setter Property="FontSize" Value="10.5pt"></Setter>
		<Setter Property="Padding" Value="13,6"></Setter>
		<Setter Property="BorderBrush" Value="Transparent"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
		<Setter Property="Margin" Value="0,10,10,10"></Setter>
		<Setter Property="MinWidth" Value="80"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border x:Name="border_EffectHost" Effect="{DynamicResource effectShadow_Small}" CornerRadius="{Binding ElementName=borderBackground, Path=CornerRadius}" Background="{Binding ElementName=borderBackground, Path=Background}"></Border>
						<Border x:Name="borderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"></Border>
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}" Margin="1" CornerRadius="3"></Border>
						<Border x:Name="borderBackground_Overlap_Disabled" Opacity="0.0" Background="{DynamicResource brushControl_Background_Disabled_Dark}" CornerRadius="3"></Border>
						<ContentPresenter x:Name="presenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="1.2" To="4.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="4.0" To="10.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.3" To="0.2" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="4.0" To="1.2" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="10.0" To="4.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.2" To="0.3" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Disabled_Dark}"></Setter>
							<Setter TargetName="border_EffectHost" Property="Visibility" Value="Collapsed"></Setter>
							<Setter TargetName="presenter" Property="Opacity" Value="0.26"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_Disabled" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_Disabled" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButton_MessageBoxPresenter_Close" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="MinWidth" Value="40"></Setter>
		<Setter Property="MinHeight" Value="40"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent">
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}"></Border>
						<Path VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Stretch="Fill" Fill="{DynamicResource brushControl_Background_Light}" Stroke="{DynamicResource brushControl_Background_Light}" StrokeThickness="1" Data="{DynamicResource geometryCross}" RenderTransformOrigin="0.5,0.5"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleToggleButton_MessageBox_ShowDetails" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushToggleButton_MessageBoxWindow_ShowDetails_Foreground}"></Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
		<Setter Property="Padding" Value="7,0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
							<ColumnDefinition></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<Path Grid.Column="0" Margin="7,0" x:Name="pathIndicator" Data="{DynamicResource geometryComboBox_SingleArrow}" Width="10" Height="5" RenderTransformOrigin="0.5,0.5" Fill="{DynamicResource brushToggleButton_MessageBoxWindow_ShowDetails_Arrow_Background}" Stretch="Fill">
							<Path.RenderTransform>
								<ScaleTransform ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
							</Path.RenderTransform>
						</Path>
						<ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="pathIndicator" Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type c:MessageBoxWindow}" TargetType="c:MessageBoxWindow">
		<Setter Property="AllowsTransparency" Value="True"></Setter>
		<Setter Property="ResizeMode" Value="NoResize"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
		<Setter Property="WindowState" Value="Normal"></Setter>
		<Setter Property="a:FontLoader.CustomFontFamilySource" Value="pack://application:,,,/Fonts/;Roboto"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Dark}"></Setter>
		<Setter Property="MinHeight" Value="150"></Setter>
		<Setter Property="MinWidth" Value="350"></Setter>
		<Setter Property="Padding" Value="15"></Setter>
		<Setter Property="SizeToContent" Value="WidthAndHeight"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:MessageBoxWindow">
					<Grid>
						<Border x:Name="border_EffectHost" Margin="{Binding ElementName=borderClip, Path=Margin}" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Window_Light}" CornerRadius="{Binding ElementName=borderClip, Path=CornerRadius}">
						</Border>
						<c:ClippingBorder x:Name="borderClip" CornerRadius="3" Background="{TemplateBinding Background}" Margin="24,5,24,37">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="40"></RowDefinition>
									<RowDefinition Height="Auto"></RowDefinition>
									<RowDefinition Height="Auto" MinHeight="31"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>

								<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="borderHeader" Background="{DynamicResource brushControl_Background_Dark}" CornerRadius="1"></Border>
								<c:WindowControlThumb Grid.Row="0" Grid.ColumnSpan="2" Style="{DynamicResource styleThumb_Window_Move}" Role="Move" AllowMaximize="False"></c:WindowControlThumb>
								<TextBlock Grid.Row="0" Grid.Column="0" Text="{TemplateBinding Title}" Margin="13,0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{DynamicResource brushControl_Foreground_Light}" FontSize="10.5pt"></TextBlock>
								<Button Grid.Row="0" Grid.Column="1" Style="{StaticResource styleButton_MessageBoxPresenter_Close}" Command="{TemplateBinding ControlButtonCommand}" CommandParameter="{x:Static c:MessageBoxControlButtonActionType.Close}"></Button>

								<Grid Grid.Row="1" Grid.ColumnSpan="2" MaxWidth="600">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition></ColumnDefinition>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"></RowDefinition>
										<RowDefinition Height="*"></RowDefinition>
									</Grid.RowDefinitions>
									<Rectangle Grid.Row="0" Grid.Column="0" x:Name="rectangleIcon" Margin="16,16,0,16" Fill="{TemplateBinding IconBrush}" Stretch="Uniform" Width="32" Height="32" VerticalAlignment="Top"></Rectangle>
									<ScrollViewer x:Name="scrollViewer_ContentHost" VerticalScrollBarVisibility="Disabled"  HorizontalScrollBarVisibility="Disabled" Grid.Row="0" Grid.Column="1" MaxHeight="400">
										<StackPanel Orientation="Vertical">
											<ContentPresenter Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
											<ContentPresenter x:Name="PART_AdditionalContentHost" Visibility="Collapsed" Content="{TemplateBinding Content}" Margin="15,0,0,10" ContentTemplate="{TemplateBinding AdditionalContentTemplate}"></ContentPresenter>
										</StackPanel>
									</ScrollViewer>
								</Grid>

								<Grid Grid.Row="2" Grid.ColumnSpan="2" Background="#FFeaeaea">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition></ColumnDefinition>
									</Grid.ColumnDefinitions>
									
									<!--<ContentControl Grid.Column="0" Margin="15,0" Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}"></ContentControl>-->

									<ToggleButton Grid.Column="0" x:Name="toggeButton_AdditionalContentVisibility" Visibility="Collapsed" Style="{StaticResource styleToggleButton_MessageBox_ShowDetails}" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MessageBoxWindow}, Path=AdditionalContentVisible, Mode=TwoWay}" Margin="15,0,0,0">Show Details</ToggleButton>

									<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
										<Button Style="{StaticResource styleButton_MessageBox}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PositiveActionButtonHeader}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PositiveActionButtonVisibility}" Command="{TemplateBinding ControlButtonCommand}" CommandParameter="{x:Static c:MessageBoxControlButtonActionType.Positive}"></Button>
										<Button Style="{StaticResource styleButton_MessageBox}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NegativeActionButtonHeader}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NegativeActionButtonVisibility}" Command="{TemplateBinding ControlButtonCommand}" CommandParameter="{x:Static c:MessageBoxControlButtonActionType.Negative}"></Button>
										<Button Style="{StaticResource styleButton_MessageBox}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CancelActionButtonVisibility}" Command="{TemplateBinding ControlButtonCommand}" CommandParameter="{x:Static c:MessageBoxControlButtonActionType.Close}">Cancel</Button>
									</StackPanel>
								</Grid>
							</Grid>
						</c:ClippingBorder>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IconBrush" Value="{x:Null}">
							<Setter TargetName="rectangleIcon" Property="Visibility" Value="Collapsed"></Setter>
						</Trigger>
						<Trigger Property="AdditionalContentAvailable" Value="True">
							<Setter TargetName="scrollViewer_ContentHost" Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
							<Setter TargetName="toggeButton_AdditionalContentVisibility" Property="Visibility" Value="Visible"></Setter>
						</Trigger>
						<Trigger Property="AdditionalContentVisible" Value="True">
							<Setter TargetName="PART_AdditionalContentHost" Property="Visibility" Value="Visible"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>