<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:c="clr-namespace:CroplandWpf.Components"
					xmlns:a="clr-namespace:CroplandWpf.Attached"
					xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers"
					xmlns:h="clr-namespace:CroplandWpf.Helpers"
                    xmlns:local="clr-namespace:CroplandWpf.Themes.Default">

	<DataTemplate x:Key="templateMessageBoxContent_Default">
		<TextBlock Text="{Binding}" TextWrapping="Wrap"></TextBlock>
	</DataTemplate>

	<Style x:Key="styleButton_MessageBox_Regular" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushButtonUtil_Foreground}"></Setter>
		<Setter Property="FontSize" Value="10.5pt"></Setter>
		<Setter Property="Padding" Value="13,6"></Setter>
		<Setter Property="BorderBrush" Value="Transparent"></Setter>
		<Setter Property="ph:ButtonHelper.ConvertToUpper" Value="True"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="Height" Value="38"></Setter>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border x:Name="border_EffectHost" Effect="{DynamicResource effectShadow_Small}" CornerRadius="{Binding ElementName=borderBackground, Path=CornerRadius}" Background="{Binding ElementName=borderBackground, Path=Background}"></Border>
						<Border x:Name="borderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"></Border>
						<Border Grid.Column="0" x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushListBoxItem_MouseOver_Background}" CornerRadius="2"></Border>
						<Border x:Name="borderBackground_Overlap_Disabled" Opacity="0.0" Background="{DynamicResource brushControl_Background_Disabled_Dark}" CornerRadius="3"></Border>
						<Rectangle x:Name="rectangleFocusVisual" RadiusX="2" RadiusY="2" Opacity="0.0" Stroke="{DynamicResource brushControl_Background_Dark}" StrokeThickness="2" Margin="0"></Rectangle>
						<ContentPresenter x:Name="presenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="1.2" To="4.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="4.0" To="10.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.3" To="0.2" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="4.0" To="1.2" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="10.0" To="4.0" Duration="00:00:00.100"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.2" To="0.3" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.6" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.6" To="1.0" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource brushButtonLight_Foreground_MouseOver}"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsKeyboardFocused" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="rectangleFocusVisual" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="rectangleFocusVisual" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButton_MessageBox_Primary" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="{DynamicResource brushControl_Background_Dark}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Light}"></Setter>
		<Setter Property="FontSize" Value="10.5pt"></Setter>
		<Setter Property="Padding" Value="13,6"></Setter>
		<Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="Height" Value="38"></Setter>
        <Setter Property="ph:ButtonHelper.ConvertToUpper" Value="True"></Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border x:Name="border_EffectHost" Effect="{DynamicResource effectShadow_Small}" CornerRadius="{Binding ElementName=borderBackground, Path=CornerRadius}" Background="{Binding ElementName=borderBackground, Path=Background}"></Border>
						<Border x:Name="borderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"></Border>
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}" Margin="1" CornerRadius="3"></Border>
						<Border x:Name="borderBackground_Overlap_Disabled" Opacity="0.0" Background="{DynamicResource brushControl_Background_Disabled_Dark}" CornerRadius="3"></Border>
						<Rectangle x:Name="rectangleFocusVisual" RadiusX="2" RadiusY="2" Opacity="0.0" Stroke="{DynamicResource brushControl_Foreground_Light}" StrokeThickness="2" Margin="0"></Rectangle>
						<ContentPresenter x:Name="presenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="1.2" To="4.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="4.0" To="10.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.3" To="0.2" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" From="4.0" To="1.2" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" From="10.0" To="4.0" Duration="00:00:00.150"></DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="border_EffectHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" From="0.2" To="0.3" Duration="00:00:00.150"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Disabled_Dark}"></Setter>
							<Setter TargetName="border_EffectHost" Property="Visibility" Value="Collapsed"></Setter>
							<Setter TargetName="presenter" Property="Opacity" Value="0.26"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_Disabled" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_Disabled" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsKeyboardFocused" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="rectangleFocusVisual" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="rectangleFocusVisual" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="00:00:00.100"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButton_MessageBoxPresenter_Close" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="MinWidth" Value="40"></Setter>
		<Setter Property="MinHeight" Value="40"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent">
						<Border x:Name="borderBackground_Overlap_MouseOver" Opacity="0.0" Background="{DynamicResource brushControl_Background_MouseOver}"></Border>
						<Path VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Stretch="Fill" Fill="{DynamicResource brushControl_Background_Light}" Stroke="{DynamicResource brushControl_Background_Light}" StrokeThickness="1" Data="{DynamicResource geometryCross}" RenderTransformOrigin="0.5,0.5"></Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="borderBackground_Overlap_MouseOver" Storyboard.TargetProperty="Opacity" Duration="00:00:00.150" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleToggleButton_MessageBox_ShowDetails" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"></Setter>
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushToggleButton_MessageBoxWindow_ShowDetails_Foreground}"></Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
		<Setter Property="Padding" Value="7,0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
							<ColumnDefinition></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<Path Grid.Column="0" x:Name="pathIndicator" Data="{DynamicResource geometryComboBox_SingleArrow}" Width="10" Height="5" RenderTransformOrigin="0.5,0.5" Fill="{DynamicResource brushToggleButton_MessageBoxWindow_ShowDetails_Arrow_Background}" Stretch="Fill">
							<Path.RenderTransform>
								<ScaleTransform ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
							</Path.RenderTransform>
						</Path>
						<ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="pathIndicator" Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="templateHyperlinkContent">
		<TextBlock x:Name="textBlock_Presenter" Text="{Binding}" TextDecorations="Underline"></TextBlock>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:HyperlinkButton}, Path=IsUnderlined}" Value="False">
				<Setter TargetName="textBlock_Presenter" Property="TextDecorations" Value="{x:Null}"></Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Style x:Key="styleHyperlinkButton_MessageBox" TargetType="{x:Type c:HyperlinkButton}">
		<Setter Property="Foreground" Value="{DynamicResource brushHyperlink_Foreground}"></Setter>
		<Setter Property="Cursor" Value="Hand"></Setter>
		<Setter Property="ContentTemplate" Value="{StaticResource templateHyperlinkContent}"></Setter>
		<Setter Property="Padding" Value="3,4"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:HyperlinkButton">
					<Border Background="{TemplateBinding Background}">
						<Grid>
							<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
							<ContentPresenter x:Name="presenterHover" Opacity="0.0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextBlock.Foreground="{DynamicResource brushHyperlink_Foreground_MouseOver}"></ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="presenterHover" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.0" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="presenterHover" Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="1.0" To="0.6"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00.200" From="0.6" To="1.0"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<DataTemplate x:Key="templateMessageBoxControlButton" DataType="{x:Type c:MessageBoxButton}">
		<Grid>
			<ph:EventCommandInvocator Event="Loaded" EventCommand="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MessageBoxWindow}, Path=ControlButtonLoadedCommand}" Target="{Binding ElementName=button}"></ph:EventCommandInvocator>
			<Button x:Name="button" Content="{Binding Header}" Style="{StaticResource styleButton_MessageBox_Primary}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MessageBoxWindow}, Path=ControlButtonCommand}" CommandParameter="{Binding}" Margin="0,10,10,10"></Button>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsPrimary}" Value="False">
				<Setter TargetName="button" Property="Style" Value="{StaticResource styleButton_MessageBox_Regular}"></Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="templateMessageBoxFooterButton" DataType="{x:Type c:MessageBoxFooterButton}">
		<c:HyperlinkButton Style="{StaticResource styleHyperlinkButton_MessageBox}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MessageBoxWindow}, Path=FooterButtonCommandInternal}" CommandParameter="{Binding CommandParameter}" Margin="0,0,10,0" VerticalAlignment="Center" Content="{Binding Header}"></c:HyperlinkButton>
	</DataTemplate>

	<Style x:Key="{x:Type c:MessageBoxWindow}" TargetType="c:MessageBoxWindow">
		<Setter Property="AllowsTransparency" Value="True"></Setter>
		<Setter Property="ResizeMode" Value="NoResize"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
		<Setter Property="WindowState" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="pack://application:,,,/CroplandWpf;component/Fonts/#Roboto"></Setter>
        <Setter Property="Background" Value="{DynamicResource brushControl_Background_Light}"></Setter>
		<Setter Property="Foreground" Value="{DynamicResource brushControl_Foreground_Dark}"></Setter>
		<Setter Property="MinHeight" Value="250"></Setter>
		<Setter Property="MinWidth" Value="550"></Setter>
		<Setter Property="Padding" Value="15,10"></Setter>
		<Setter Property="MaxWidth" Value="1000"></Setter>
		<Setter Property="SizeToContent" Value="WidthAndHeight"></Setter>
		<Setter Property="ShowInTaskbar" Value="False"></Setter>
		<Setter Property="ContentTemplate" Value="{StaticResource templateMessageBoxContent_Default}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:MessageBoxWindow">
					<Grid>
						<Border x:Name="border_EffectHost" Margin="26,7,26,39" Background="{TemplateBinding Background}" Effect="{DynamicResource effectShadow_Window_Light}" CornerRadius="4">
						</Border>
						<ph:CroppedWindowBackgroundHelper x:Name="backgroundHelper" HeaderSectionHeight="{Binding ElementName=rowHeader, Path=ActualHeight}" TotalHeight="{Binding ElementName=borderClip, Path=ActualHeight}" ContentBackgroundColor="{DynamicResource colorControl_Background_Light}" HeaderBackgroundColor="{DynamicResource colorControl_Background_Dark}"></ph:CroppedWindowBackgroundHelper>
						<c:ClippingBorder x:Name="borderClip" CornerRadius="3" Background="{Binding ElementName=backgroundHelper, Path=WindowBackgroundBrush, Mode=OneWay}" Margin="24,5,24,37">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition x:Name="rowHeader" Height="42"></RowDefinition>
									<RowDefinition Height="*"></RowDefinition>
									<RowDefinition Height="Auto" MinHeight="60"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>

								<h:MessageBoxContentWidthHelper x:Name="contentWidthHelper" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinWidth}" FooterSectionWidth="{Binding ElementName=gridButtons, Path=ActualWidth}" Visibility="Collapsed"></h:MessageBoxContentWidthHelper>

								<c:WindowControlThumb Grid.Row="0" Grid.ColumnSpan="2" Style="{DynamicResource styleThumb_Window_Move}" Role="Move" AllowMaximize="False"></c:WindowControlThumb>
								<TextBlock Grid.Row="0" Grid.Column="0" Text="{TemplateBinding Title}" Margin="16,0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{DynamicResource brushControl_Foreground_Light}" FontSize="10.5pt" IsHitTestVisible="False"></TextBlock>
								<Button Grid.Row="0" Grid.Column="1" Style="{StaticResource styleButton_MessageBoxPresenter_Close}" Command="{TemplateBinding ControlButtonCommand}" CommandParameter="{x:Static c:MessageBoxButton.Close}" Focusable="False"></Button>

								<Grid Grid.Row="1" Grid.ColumnSpan="2" MaxWidth="{Binding ElementName=contentWidthHelper, Path=CalculatedContentMaxWidth}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition Width="*"></ColumnDefinition>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"></RowDefinition>
										<RowDefinition Height="*"></RowDefinition>
									</Grid.RowDefinitions>
									<Rectangle Grid.Row="0" Grid.Column="0" x:Name="rectangleIcon" Margin="16,16,0,16" Fill="{TemplateBinding IconBrush}" Stretch="Uniform" Width="64" Height="64" VerticalAlignment="Top"></Rectangle>
									<ScrollViewer x:Name="scrollViewer_ContentHost" Focusable="False" IsTabStop="False" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" KeyboardNavigation.DirectionalNavigation="None" VerticalScrollBarVisibility="Disabled"  HorizontalScrollBarVisibility="Disabled" Grid.Row="0" Grid.Column="1" MaxHeight="400">
										<StackPanel Orientation="Vertical">
											<ContentPresenter Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
											<ContentPresenter x:Name="PART_AdditionalContentHost" Visibility="Collapsed" Content="{TemplateBinding Content}" Margin="15,0,0,10" ContentTemplate="{TemplateBinding AdditionalContentTemplate}"></ContentPresenter>
										</StackPanel>
									</ScrollViewer>
								</Grid>

								<Grid Grid.Row="2" Grid.ColumnSpan="2" x:Name="gridButtons" Background="#FFeaeaea">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
										<ColumnDefinition Width="*"></ColumnDefinition>
										<ColumnDefinition Width="Auto"></ColumnDefinition>
									</Grid.ColumnDefinitions>

                                    <Rectangle x:Name="rectangleWidthConstraint" Grid.ColumnSpan="3"></Rectangle>

                                    <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="0,0">
										<ItemsControl x:Name="itemsControl_FooterButtons" Margin="10,0,0,0" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FooterButtons}" ItemTemplate="{StaticResource templateMessageBoxFooterButton}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Horizontal"></StackPanel>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
										<ToggleButton x:Name="toggeButton_AdditionalContentVisibility" Visibility="Collapsed" Style="{StaticResource styleToggleButton_MessageBox_ShowDetails}" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MessageBoxWindow}, Path=AdditionalContentVisible, Mode=TwoWay}" Margin="10,0,0,0" Focusable="False">Show Details</ToggleButton>
									</StackPanel>

									<ItemsControl Grid.Column="2" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Buttons}" HorizontalAlignment="Right" Margin="10,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource templateMessageBoxControlButton}" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Horizontal"></StackPanel>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</Grid>
							</Grid>
						</c:ClippingBorder>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IconBrush" Value="{x:Null}">
							<Setter TargetName="rectangleIcon" Property="Visibility" Value="Collapsed"></Setter>
						</Trigger>
						<Trigger Property="AdditionalContentAvailable" Value="True">
							<Setter TargetName="scrollViewer_ContentHost" Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
							<Setter TargetName="toggeButton_AdditionalContentVisibility" Property="Visibility" Value="Visible"></Setter>
						</Trigger>
						<Trigger Property="AdditionalContentVisible" Value="True">
							<Setter TargetName="PART_AdditionalContentHost" Property="Visibility" Value="Visible"></Setter>
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FooterButtons.Count}" Value="0">
							<Setter TargetName="itemsControl_FooterButtons" Property="Visibility" Value="Collapsed"></Setter>
							<Setter TargetName="toggeButton_AdditionalContentVisibility" Property="Margin" Value="0,0,0,0"></Setter>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>