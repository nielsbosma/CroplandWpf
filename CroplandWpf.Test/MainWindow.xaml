<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CroplandWpf.Test"
		xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers;assembly=CroplandWpf"
		x:Class="CroplandWpf.Test.MainWindow"
		xmlns:a="clr-namespace:CroplandWpf.Attached;assembly=CroplandWpf"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		xmlns:c="clr-namespace:CroplandWpf.Components;assembly=CroplandWpf"
		xmlns:conv="clr-namespace:CroplandWpf.Converters;assembly=CroplandWpf"
		xmlns:msc="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
		WindowState="Normal"
        Title="Cropland Test App" Height="800" Width="1440"
		a:MenuHelper.ItemsSource="{Binding MenuItemsTestSource}"
		d:DesignWidth="1200"
		d:DesignHeight="1380"
		WindowStartupLocation="CenterScreen"
		Style="{DynamicResource styleWindow_Light}">
	<!--Style="{DynamicResource {x:Type Window}}"-->

	<Window.Resources>
		<DataTemplate x:Key="templateStringTest">
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Text:"/>
				<TextBlock Text="{Binding}"/>
			</StackPanel>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Dark}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Light}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"></TextBlock>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat='{}({0} mb)'}"></TextBlock>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"></TextBlock>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon)}" Foreground="{DynamicResource brushControl_Foreground_Light}">Don`t show again</c:HyperlinkButton>
						<Button Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand}" HorizontalAlignment="Right" Margin="0,5,0,0" Style="{DynamicResource styleButton_Light}">Got It</Button>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Dark}" RenderTransformOrigin="0.5,0.5"></Polygon>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:OverlayContentControl}, Path=CalculatedPlacement}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"></Setter>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"></Setter>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl_TopPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"></TextBlock>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat='{}({0} mb)'}"></TextBlock>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"></TextBlock>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon)}">Don`t show again</c:HyperlinkButton>
						<Button Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand}" HorizontalAlignment="Right" Margin="0,5,0,0">Got It</Button>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"></Polygon>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:OverlayContentControl}, Path=CalculatedPlacement}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"></Setter>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"></Setter>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_SearchAutoComplete_LeftPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,0,10,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="Allows to search within some collection"></TextBlock>
						<c:HyperlinkButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon)}">Don`t show again</c:HyperlinkButton>
						<Button Grid.Row="1" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand}" HorizontalAlignment="Right" Margin="0,5,0,0">Got It</Button>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Right" VerticalAlignment="Center" Points="0,0 11,11 0,22" Width="11" Height="22" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"></Polygon>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:OverlayContentControl}, Path=CalculatedPlacement}" Value="Right">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="-1.0" ScaleY="1.0"></ScaleTransform>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="HorizontalAlignment" Value="Left"></Setter>
					<Setter TargetName="borderBackground" Property="Margin" Value="10,0,0,0"></Setter>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl_RightPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"></TextBlock>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat='{}({0} mb)'}"></TextBlock>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"></TextBlock>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon)}">Don`t show again</c:HyperlinkButton>
						<Button Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource Self}, Path=(a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand}" HorizontalAlignment="Right" Margin="0,5,0,0">Got It</Button>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"></Polygon>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:OverlayContentControl}, Path=CalculatedPlacement}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"></ScaleTransform>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"></Setter>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"></Setter>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<c:MessageBoxInfo x:Key="mbiFromResources" ContentTemplateKey="templateMbiFromResources_Content" Header="MessageBoxInfo defined in resources" IconBrushKey="{x:Static c:MessageBoxIconBrushDefaultKeys.Warning}" Content="MessageBoxInfo with a custom ContentTemplate defined in XAML locally. Has the footer template defined too" Footer="some random footer" FooterTemplateKey="templateMbiFromResources_Footer" Buttons="YesNoCancel">
			<c:MessageBoxInfo.Resources>
				<DataTemplate x:Key="templateMbiFromResources_Content">
					<TextBlock>
						<TextBlock Text="This MessageBox text will go in Italic style:"></TextBlock>
						<LineBreak></LineBreak>
						<TextBlock FontStyle="Italic" Text="{Binding}" TextWrapping="Wrap"></TextBlock>
					</TextBlock>
				</DataTemplate>

				<DataTemplate x:Key="templateMbiFromResources_Footer">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
						<TextBlock Text="{Binding}"></TextBlock>
						<c:HyperlinkButton Padding="0" Margin="5,0,0,0">Dont Show Again</c:HyperlinkButton>
					</StackPanel>
				</DataTemplate>
			</c:MessageBoxInfo.Resources>
		</c:MessageBoxInfo>

		<CollectionViewSource x:Key="sourcePersonalityType">
			<CollectionViewSource.Source>
				<ObjectDataProvider MethodName="GetNames" ObjectType="{x:Type msc:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="local:PersonalityType"/>
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
			</CollectionViewSource.Source>
		</CollectionViewSource>

		<DataTemplate x:Key="templateRemovableItemTest" DataType="{x:Type local:FileItem}">
			<TextBlock VerticalAlignment="Center">
				<TextBlock Text="{Binding Name}"></TextBlock>
			</TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="templateRemovableList_CustomContent">
			<Button Style="{DynamicResource styleButton_AddFile}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=AddNewFileTestCommand}" Margin="10,0,5,0" VerticalAlignment="Center"></Button>
		</DataTemplate>

		<Style x:Key="styleRemovableItem_Files1" TargetType="c:RemovableItemContentControl" BasedOn="{StaticResource {x:Type c:RemovableItemContentControl}}">
			<Setter Property="a:ToolTipBeacon.ToolTipContent" Value="{Binding}"></Setter>
			<Setter Property="a:ToolTipBeacon.ToolTipTemplateKey" Value="templateToolTip_RemovableItemContentControl"></Setter>
			<Setter Property="a:ToolTipBeacon.PlacementPriority" Value="Top"></Setter>
		</Style>

		<Style x:Key="styleRemovableItem_Files2" TargetType="c:RemovableItemContentControl" BasedOn="{StaticResource {x:Type c:RemovableItemContentControl}}">
			<Setter Property="a:ToolTipBeacon.ToolTipContent" Value="{Binding}"></Setter>
			<Setter Property="a:ToolTipBeacon.ToolTipTemplateKey" Value="templateToolTip_RemovableItemContentControl_TopPlacement"></Setter>
			<Setter Property="a:ToolTipBeacon.PlacementPriority" Value="Bottom"></Setter>
		</Style>
	</Window.Resources>

	<Border>
		<Grid Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="330"/>
				<ColumnDefinition Width="300"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid Grid.Column="0" Grid.RowSpan="3">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" FontWeight="Bold">Common Controls</TextBlock>
				<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
					<StackPanel Orientation="Vertical">
						<TextBlock Margin="5">Button</TextBlock>
						<Button VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left" Content="NORMAL"/>
						<StackPanel Orientation="Horizontal">
							<Button x:Name="buttonTest" VerticalAlignment="Top" IsEnabled="False" HorizontalAlignment="Left" Margin="5" Content="DISABLED"/>
							<CheckBox Margin="24,0,0,0" IsChecked="{Binding ElementName=buttonTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<Button Margin="5" Style="{DynamicResource styleButton_GoBack}" HorizontalAlignment="Left"></Button>
						<StackPanel Orientation="Horizontal">
							<Button Margin="5" Style="{DynamicResource styleButton_AddFile}"></Button>
							<Button x:Name="buttonRemoveTest" Margin="0,5,5,5" Style="{DynamicResource styleButton_RemoveFile}"></Button>
							<CheckBox IsChecked="{Binding ElementName=buttonRemoveTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<c:HyperlinkButton x:Name="hyperlinkTest" Command="{Binding HyperlinkTestCommand}" CommandParameter="{Binding HyperlinkTest}">Hyperlink</c:HyperlinkButton>
							<CheckBox Margin="24,0,0,0" IsChecked="{Binding ElementName=hyperlinkTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<c:HyperlinkButton IsUnderlined="False" HorizontalAlignment="Left">no underline</c:HyperlinkButton>
						<Button Margin="5" HorizontalAlignment="Left" Style="{DynamicResource styleButton_RemoveRequest}"></Button>
						<Rectangle Fill="DarkGray" Height="1"/>
						<CheckBox Margin="5" FontSize="9.5pt" Content="CheckBox"/>
						<CheckBox Margin="5" IsEnabled="False" Content="CheckBox (disabled)"/>
						<Rectangle Fill="DarkGray" Height="1"/>
						<RadioButton Margin="5,5,5,3" GroupName="rbtest" IsChecked="True" Content="RadioButton 1 (group: rbtest)"/>
						<RadioButton Margin="5,0,5,5" GroupName="rbtest" Content="RadioButton 2 (group: rbtest)"/>
						<RadioButton Margin="5,0,5,5" IsEnabled="False" Content="RadioButton 3 (disabled)"/>
						<StackPanel Orientation="Horizontal">
							<RadioButton x:Name="radioButtonTest" Margin="5,0,5,5" IsEnabled="False" IsChecked="True" Content="RadioButton 4 (checked/disabled)"/>
							<CheckBox Margin="5,0" IsChecked="{Binding ElementName=radioButtonTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<Rectangle Fill="DarkGray" Height="1"/>
						<TextBox Margin="5" Text="TextBox"/>
						<TextBox Margin="5" IsEnabled="False" Text="TextBox (disabled)"/>
						<TextBlock Margin="5" Text="PasswordBox"></TextBlock>
						<StackPanel Orientation="Horizontal" Margin="5">
							<PasswordBox a:PasswordHelper.AttachedController="{Binding UserPasswordController}" MinWidth="150"></PasswordBox>
							<Button Margin="5,0" Command="{Binding UpdateUserPasswordCommand}">OK</Button>
						</StackPanel>
						<TextBlock Margin="5">CommandTextBox</TextBlock>
						<c:CommandTextBox x:Name="commandTextBox" Command="{Binding CommandTextBoxCommand}" ButtonStyle="{DynamicResource styleButton_CommandTextBox_Green}" ButtonContent="REGISTER"></c:CommandTextBox>
						<TextBlock Margin="20,5,5,5"><Run>CommandTextBox output:</Run><Run Text="{Binding CommandTextBoxString}"></Run></TextBlock>
						<CheckBox Margin="5,0,5,5" IsChecked="{Binding ElementName=commandTextBox, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						<c:CommandTextBox Margin="5" x:Name="commandTextBox1" ButtonStyle="{DynamicResource styleButton_Arrow_Right}"></c:CommandTextBox>
						<CheckBox Margin="5,0,5,5" IsChecked="{Binding ElementName=commandTextBox1, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Arrow_Up}"></c:CommandTextBox>
						<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Cross}"></c:CommandTextBox>
						<TextBlock Margin="5,10,5,5">CommandTextBox with IsButtonFisible = False:</TextBlock>
						<c:CommandTextBox ButtonStyle="{DynamicResource styleButton_Cross}" IsButtonVisible="False"></c:CommandTextBox>
					</StackPanel>
				</ScrollViewer>
			</Grid>
			<StackPanel Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical" VerticalAlignment="Top">
				<TextBlock FontWeight="Bold">ItemsControls</TextBlock>
				<TextBlock Margin="5">ListBox</TextBlock>
				<ListBox x:Name="listBoxTest" Height="150" ItemsSource="{Binding TestItemsSource}"/>
				<CheckBox Margin="3" IsChecked="{Binding ElementName=listBoxTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
				<Grid>
					<!--<ContentControl Margin="5">
						<ContentControl.Style>
							<Style TargetType="ContentControl">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ContentControl">
											<Grid>
												<Path x:Name="pathInner" Stretch="Fill" Stroke="{DynamicResource brushIcon_LoadingIndicator_InnerRing}" Width="32" Height="32" RenderTransformOrigin="0.5,0.5">
													<Path.Data>
														<EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
													</Path.Data>
													<Path.RenderTransform>
														<ScaleTransform x:Name="stInner" ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
													</Path.RenderTransform>
												</Path>
												<Path x:Name="pathOuter" Stretch="Fill" Stroke="{DynamicResource brushIcon_LoadingIndicator_OuterRing}" Width="64" Height="64" RenderTransformOrigin="0.5,0.5">
													<Path.Data>
														<EllipseGeometry RadiusX="28.9492" RadiusY="28.9492" Center="50,50" />
													</Path.Data>
													<Path.RenderTransform>
														<ScaleTransform x:Name="stOuter" ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
													</Path.RenderTransform>
												</Path>
											</Grid>
											<ControlTemplate.Triggers>
												<EventTrigger RoutedEvent="Loaded">
													<EventTrigger.Actions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="pathInner" Storyboard.TargetProperty="Opacity" To="0.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stInner" Storyboard.TargetProperty="ScaleX" To="2.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stInner" Storyboard.TargetProperty="ScaleY" To="2.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="pathOuter" Storyboard.TargetProperty="Opacity" To="0.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stOuter" Storyboard.TargetProperty="ScaleX" To="2.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stOuter" Storyboard.TargetProperty="ScaleY" To="2.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</EventTrigger.Actions>
												</EventTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ContentControl.Style>
					</ContentControl>-->
				</Grid>
				<TextBlock Margin="5">ComboBox</TextBlock>
				<ComboBox x:Name="comboBoxTest" ItemsSource="{Binding TestItemsSource}" />
				<TextBlock Margin="5">ComboBox (light)</TextBlock>
				<ComboBox Margin="3" Style="{DynamicResource styleComboBox_Light}"  ItemsSource="{Binding TestItemsSource}"></ComboBox>

				<CheckBox Margin="3" IsChecked="{Binding ElementName=comboBoxTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
				<TextBlock FontWeight="Bold" Margin="5">SearchAutocompleteControl (left-aligned tooltip)</TextBlock>
				<c:SearchAutocompleteControl x:Name="searchAutocomplete" a:ToolTipBeacon.InheritedGroupName="s_a" a:ToolTipBeacon.ToolTipTemplateKey="templateToolTip_SearchAutoComplete_LeftPlacement" a:ToolTipBeacon.PlacementPriority="Right" SearchResultRefreshCommand="{Binding ConversionSearchResultRefreshCommand}" ItemsSource="{Binding SearchResults}" SearchItemCommand="{Binding SearchItemClickCommand}"></c:SearchAutocompleteControl>
				<TextBlock Margin="15,3,0,3">
					<Run>clicked search item:</Run>
					<Run Text="{Binding ClickedSearchItem}" FontWeight="Bold"></Run>
				</TextBlock>
				<CheckBox Margin="3" IsChecked="{Binding ElementName=searchAutocomplete, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
			</StackPanel>
			<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Top">
				<TextBlock Margin="5">Removable items ItemsControl (with item tooltips)</TextBlock>
				<c:RemovableItemsItemsControl Margin="0,0,0,0" a:ToolTipBeacon.InheritedGroupName="files" ItemTemplate="{StaticResource templateRemovableItemTest}" ItemsSource="{Binding TestRemovableItemsItemsSource}" a:RemoveRequestHelper.RemoveRequestCommand="{Binding RemoveRequestTestCommand}" a:ItemsControlHelper.Orientation="Horizontal" CustomPartContentTemplate="{StaticResource templateRemovableList_CustomContent}" ItemContainerStyle="{StaticResource styleRemovableItem_Files1}"></c:RemovableItemsItemsControl>
				<c:RemovableItemsItemsControl Margin="0,50,0,0" a:ToolTipBeacon.InheritedGroupName="files2" ItemTemplate="{StaticResource templateRemovableItemTest}" ItemsSource="{Binding TestRemovableItemsItemsSource}" a:ItemsControlHelper.Orientation="Horizontal" a:ToolTipBeacon.PlacementPriority="Top" ItemContainerStyle="{StaticResource styleRemovableItem_Files2}"></c:RemovableItemsItemsControl>
			</StackPanel>
			<StackPanel Grid.Column="2" Grid.RowSpan="3" Orientation="Vertical">
				<TextBlock Margin="5" FontWeight="Bold">MessageBox</TextBlock>
				<StackPanel Orientation="Horizontal">
					<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Exception}">Simple Exception (OK)</Button>
					<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Question}">Simple Question (Yes/No)</Button>
					<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Warning}">Simple Warning (OK)</Button>
					<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{StaticResource mbiFromResources}">From Resources</Button>
				</StackPanel>
				<TextBlock Margin="20,5,0,5">
					<TextBlock Text="MessageBoxResult:"></TextBlock>
					<TextBlock Margin="10,0,0,0" Text="{Binding MessageBoxResult}" FontWeight="Bold"></TextBlock>
				</TextBlock>
				<TextBlock Margin="5" FontWeight="Bold">DatePicker</TextBlock>
				<DatePicker x:Name="datePicker" Margin="5" SelectedDate="{Binding DateTimeTest, Mode=TwoWay}" HorizontalAlignment="Left" ></DatePicker>
				<TextBlock Margin="5" FontWeight="Bold">DataGrid</TextBlock>
				<DataGrid Margin="5" Height="200" ItemsSource="{Binding PersonsTestSource}" AutoGenerateColumns="False">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Person Name" Binding="{Binding Name, Mode=TwoWay}" ElementStyle="{DynamicResource styleTextBlock_DataGridTextColumn}" EditingElementStyle="{DynamicResource styleTextBox_DataGridTextColumn}"></DataGridTextColumn>
						<DataGridTextColumn Header="Internal Number" IsReadOnly="True" Binding="{Binding InternalNumber}" ElementStyle="{DynamicResource styleTextBlock_DataGridTextColumn}"></DataGridTextColumn>
						<DataGridCheckBoxColumn Header="Has Medical License" IsReadOnly="False" Binding="{Binding IsMedic, Mode=TwoWay}" ElementStyle="{DynamicResource styleCheckBox_DataGridCheckBoxColumn}" EditingElementStyle="{DynamicResource styleCheckBox_DataGridCheckBoxColumn}"></DataGridCheckBoxColumn>
						<DataGridComboBoxColumn Header="Personality Type" SelectedItemBinding="{Binding PersonalityType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource sourcePersonalityType}}" EditingElementStyle="{DynamicResource styleComboBox_DataGridComboBoxColumn}" ElementStyle="{DynamicResource styleComboBox_DataGridComboBoxColumn}"></DataGridComboBoxColumn>
					</DataGrid.Columns>
				</DataGrid>
			</StackPanel>
		</Grid>
	</Border>
</Window>