<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CroplandWpf.Test"
		xmlns:ph="clr-namespace:CroplandWpf.PresentationHelpers;assembly=CroplandWpf"
		xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:a="clr-namespace:CroplandWpf.Attached;assembly=CroplandWpf"
		xmlns:c="clr-namespace:CroplandWpf.Components;assembly=CroplandWpf"
		xmlns:conv="clr-namespace:CroplandWpf.Converters;assembly=CroplandWpf"
		xmlns:msc="clr-namespace:System;assembly=mscorlib"
		xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		x:Class="CroplandWpf.Test.MainWindow"
        mc:Ignorable="d"
		WindowState="Normal"
        Title="Cropland Test App" Height="800" Width="1440"
		a:MenuHelper.ItemsSource="{Binding MenuItemsTestSource}"
		d:DesignWidth="1200"
		d:DesignHeight="1480"
		WindowStartupLocation="CenterScreen"
		Style="{DynamicResource styleWindow_Light}">
	<!--Style="{DynamicResource {x:Type Window}}"-->

	<Window.Resources>
		<DataTemplate x:Key="templateStringTest">
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Text:"/>
				<TextBlock Text="{Binding}"/>
			</StackPanel>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Dark}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Light}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"/>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat=(\{0\} mb)}"/>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"/>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding (a:ToolTipBeacon.AttachedBeacon), RelativeSource={RelativeSource Self}}" VerticalAlignment="Center" Foreground="{DynamicResource brushControl_Foreground_Light}" Content="Don`t show again" Margin="0,0,40,0"/>
						<Button Grid.Row="2" Grid.Column="1" Command="{Binding (a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" Margin="0,5,0,0" Style="{DynamicResource styleButton_Light}" Content="Got It"/>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Dark}" RenderTransformOrigin="0.5,0.5"/>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding CalculatedPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:OverlayContentControl}}}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"/>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"/>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl_TopPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"/>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat=(\{0\} mb)}"/>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"/>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding (a:ToolTipBeacon.AttachedBeacon), RelativeSource={RelativeSource Self}}" Content="Don`t show again"/>
						<Button Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding (a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" Margin="0,5,0,0" Content="Got It"/>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"/>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding CalculatedPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:OverlayContentControl}}}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"/>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"/>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_SearchAutoComplete_LeftPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,0,10,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="Allows to search within some collection"/>
						<c:HyperlinkButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding (a:ToolTipBeacon.AttachedBeacon), RelativeSource={RelativeSource Self}}" Content="Don`t show again"/>
						<Button Grid.Row="1" Grid.ColumnSpan="2" Command="{Binding (a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" Margin="0,5,0,0" Content="Got It"/>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Right" VerticalAlignment="Center" Points="0,0 11,11 0,22" Width="11" Height="22" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"/>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding CalculatedPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:OverlayContentControl}}}" Value="Right">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="-1.0" ScaleY="1.0"/>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="HorizontalAlignment" Value="Left"/>
					<Setter TargetName="borderBackground" Property="Margin" Value="10,0,0,0"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="templateToolTip_RemovableItemContentControl_RightPlacement" DataType="local:FileItem">
			<Grid x:Name="gridRoot">
				<Border x:Name="borderBackground" Background="{DynamicResource brushControl_Background_Light}" Padding="10" CornerRadius="3" Effect="{DynamicResource effectShadow_Large}" BorderThickness="0" Margin="0,10,0,0" MinHeight="100" MinWidth="150" MaxWidth="300">
					<Grid TextBlock.Foreground="{DynamicResource brushControl_Foreground_Dark}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" Text="{Binding Name}"/>
						<TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Size_Mb, StringFormat=(\{0\} mb)}"/>
						<TextBlock Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Text="{Binding Path}" TextTrimming="CharacterEllipsis" Margin="0,5,0,0"/>
						<c:HyperlinkButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Command="{x:Static a:ToolTipBeacon.DisableToolTipsGroupCommand}" CommandParameter="{Binding (a:ToolTipBeacon.AttachedBeacon), RelativeSource={RelativeSource Self}}" Content="Don`t show again"/>
						<Button Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding (a:ToolTipBeacon.AttachedBeacon).ToolTipCloseCommand, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" Margin="0,5,0,0" Content="Got It"/>
					</Grid>
				</Border>
				<Polygon x:Name="polygonArrow" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,11 11,0 22,11" Width="22" Height="11" Fill="{DynamicResource brushControl_Background_Light}" RenderTransformOrigin="0.5,0.5"/>
			</Grid>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding CalculatedPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:OverlayContentControl}}}" Value="Top">
					<Setter TargetName="polygonArrow" Property="RenderTransform">
						<Setter.Value>
							<ScaleTransform ScaleX="1.0" ScaleY="-1.0"/>
						</Setter.Value>
					</Setter>
					<Setter TargetName="polygonArrow" Property="VerticalAlignment" Value="Bottom"/>
					<Setter TargetName="borderBackground" Property="Margin" Value="0,0,0,10"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<c:MessageBoxInfo x:Key="mbiFromResources" ContentTemplateKey="templateMbiFromResources_Content" Header="MessageBoxInfo defined in resources" IconBrushKey="{x:Static c:MessageBoxIconBrushDefaultKeys.Warning}" Content="MessageBoxInfo with a custom ContentTemplate defined in XAML locally. Has the footer template defined too" Footer="some random footer" FooterTemplateKey="templateMbiFromResources_Footer" Buttons="YesNoCancel">
			<c:MessageBoxInfo.Resources>
				<DataTemplate x:Key="templateMbiFromResources_Content">
					<TextBlock><InlineUIContainer>
							<TextBlock Text="This MessageBox text will go in Italic style:"/>
						</InlineUIContainer><LineBreak/><InlineUIContainer>
							<TextBlock FontStyle="Italic" Text="{Binding}" TextWrapping="Wrap"/>
						</InlineUIContainer></TextBlock>
				</DataTemplate>

				<DataTemplate x:Key="templateMbiFromResources_Footer">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
						<TextBlock Text="{Binding}"/>
						<c:HyperlinkButton Padding="0" Margin="5,0,0,0" Content="Dont Show Again"/>
					</StackPanel>
				</DataTemplate>
			</c:MessageBoxInfo.Resources>
		</c:MessageBoxInfo>

		<c:InputDialogInfo x:Key="inputDialogInfo_AddNewFileItem" ContentType="{x:Type local:FileItem}" ContentTemplateKey="templateInputDialogContent_FileItem" ph:DataContextBridge.SourceScopeName="vm_main" CanPositiveActionExecute="{Binding NewFileItemValidator}">
			<c:InputDialogInfo.Resources>
				<DataTemplate x:Key="templateInputDialogContent_FileItem" DataType="{x:Type local:FileItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
							<ColumnDefinition></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Text="Name:" Margin="10,0" VerticalAlignment="Center"></TextBlock>
						<TextBox Grid.Row="0" Grid.Column="1" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Margin="0,5" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
						<TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" Text="Size:" Margin="10,0" VerticalAlignment="Center"></TextBlock>
						<tk:IntegerUpDown Grid.Row="1" Grid.Column="1" Margin="0,5" Value="{Binding Size_Mb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></tk:IntegerUpDown>
					</Grid>
				</DataTemplate>
			</c:InputDialogInfo.Resources>
		</c:InputDialogInfo>

		<c:InputDialogInfo x:Key="inputDialogInfo_Search" ph:DataContextBridge.SourceScopeName="vm_main" PositiveActionButtonHeader="Maybe.." NegativeActionButtonHeader="Probably not" ContentTemplateKey="templateInputDialog_Search" Content="{Binding SearchInputDialogViewModel}">
			<c:InputDialogInfo.Resources>
				<DataTemplate x:Key="templateInputDialog_Search">
					<c:SearchAutocompleteControl AutoClear="True" AutoFocusOnLoad="True" ItemsSource="{Binding SearchResults}" SearchItemCommand="{Binding SearchCompleteCommand}" SearchResultRefreshCommand="{Binding RefreshSearchResultsCommand}"></c:SearchAutocompleteControl>
				</DataTemplate>
			</c:InputDialogInfo.Resources>
		</c:InputDialogInfo>

		<CollectionViewSource x:Key="sourcePersonalityType">
			<CollectionViewSource.Source>
				<ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type msc:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="local:PersonalityType"/>
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
			</CollectionViewSource.Source>
		</CollectionViewSource>

		<DataTemplate x:Key="templateRemovableItemTest" DataType="{x:Type local:FileItem}">
			<TextBlock VerticalAlignment="Center"><InlineUIContainer>
					<TextBlock Text="{Binding Name}"/>
				</InlineUIContainer></TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="templateRemovableList_CustomContent">
			<Button Style="{DynamicResource styleButton_AddFile}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=ShowAddNewFileInputDialogCommand}" CommandParameter="{StaticResource inputDialogInfo_AddNewFileItem}" Margin="10,0,5,0" VerticalAlignment="Center"/>
		</DataTemplate>

		<Style x:Key="styleRemovableItem_Files1" TargetType="{x:Type c:RemovableItemContentControl}" BasedOn="{StaticResource {x:Type c:RemovableItemContentControl}}">
			<Setter Property="a:ToolTipBeacon.ToolTipContent" Value="{Binding}"/>
			<Setter Property="a:ToolTipBeacon.ToolTipTemplateKey" Value="templateToolTip_RemovableItemContentControl"/>
			<Setter Property="a:ToolTipBeacon.PlacementPriority" Value="Top"/>
		</Style>

		<Style x:Key="styleRemovableItem_Files2" TargetType="{x:Type c:RemovableItemContentControl}" BasedOn="{StaticResource {x:Type c:RemovableItemContentControl}}">
			<Setter Property="a:ToolTipBeacon.ToolTipContent" Value="{Binding}"/>
			<Setter Property="a:ToolTipBeacon.ToolTipTemplateKey" Value="templateToolTip_RemovableItemContentControl_TopPlacement"/>
			<Setter Property="a:ToolTipBeacon.PlacementPriority" Value="Bottom"/>
		</Style>
	</Window.Resources>

	<Grid Margin="10">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="330"/>
			<ColumnDefinition Width="300"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<ph:DataContextBridge ScopeName="vm_main"></ph:DataContextBridge>

		<Grid Grid.Column="0" Grid.RowSpan="3">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" FontWeight="Bold"><Run Text="Common Controls"/></TextBlock>
			<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
				<StackPanel Orientation="Vertical">
					<TextBlock>BusyIndicator</TextBlock>
					<StackPanel Orientation="Horizontal">
						<c:BusyIndicator x:Name="busyIndicator" Margin="5"></c:BusyIndicator>
						<CheckBox Margin="15,0,0,0" IsChecked="{Binding ElementName=busyIndicator, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
					</StackPanel>
					<TextBlock Margin="5"><Run Text="Button"/></TextBlock>
					<Button VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left" Content="NORMAL"/>
					<StackPanel Orientation="Horizontal">
						<Button x:Name="buttonTest" VerticalAlignment="Top" IsEnabled="False" HorizontalAlignment="Left" Margin="5" Content="DISABLED"/>
						<CheckBox Margin="24,0,0,0" IsChecked="{Binding IsEnabled, ElementName=buttonTest, Mode=TwoWay}" Content="IsEnabled"/>
					</StackPanel>
					<Button Margin="5" Style="{DynamicResource styleButton_GoBack}" HorizontalAlignment="Left"/>
					<StackPanel Orientation="Horizontal">
						<Button Margin="5" Style="{DynamicResource styleButton_AddFile}"/>
						<Button x:Name="buttonRemoveTest" Margin="0,5,5,5" Style="{DynamicResource styleButton_RemoveFile}"/>
						<CheckBox IsChecked="{Binding IsEnabled, ElementName=buttonRemoveTest, Mode=TwoWay}" Content="IsEnabled"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<c:HyperlinkButton x:Name="hyperlinkTest" Command="{Binding HyperlinkTestCommand}" CommandParameter="{Binding HyperlinkTest}" Content="Hyperlink"/>
						<CheckBox Margin="24,0,0,0" IsChecked="{Binding IsEnabled, ElementName=hyperlinkTest, Mode=TwoWay}" Content="IsEnabled"/>
					</StackPanel>
					<c:HyperlinkButton IsUnderlined="False" HorizontalAlignment="Left" Content="no underline"/>
					<Button Margin="5" HorizontalAlignment="Left" Style="{DynamicResource styleButton_RemoveRequest}"/>
					<Rectangle Fill="DarkGray" Height="1"/>
					<CheckBox Margin="5" FontSize="9.5pt" Content="CheckBox"/>
					<CheckBox Margin="5" IsEnabled="False" Content="CheckBox (disabled)"/>
					<Rectangle Fill="DarkGray" Height="1"/>
					<RadioButton Margin="5,5,5,3" GroupName="rbtest" IsChecked="True" Content="RadioButton 1 (group: rbtest)"/>
					<RadioButton Margin="5,0,5,5" GroupName="rbtest" Content="RadioButton 2 (group: rbtest)"/>
					<RadioButton Margin="5,0,5,5" IsEnabled="False" Content="RadioButton 3 (disabled)"/>
					<Path Width="12" Height="6" Data="M0,6 L6,0 12,6 0,6z" Fill="Black"></Path>
					<StackPanel Orientation="Horizontal">
						<RadioButton x:Name="radioButtonTest" Margin="5,0,5,5" IsEnabled="False" IsChecked="True" Content="RadioButton 4 (checked/disabled)"/>
						<CheckBox Margin="5,0" IsChecked="{Binding IsEnabled, ElementName=radioButtonTest, Mode=TwoWay}" Content="IsEnabled"/>
					</StackPanel>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<ProgressBar Grid.Column="0" Minimum="0" Maximum="100" Value="{Binding ProgressBarValueTest}" Margin="5,0,0,0"></ProgressBar>
						<Button Grid.Column="1" Margin="5,0" Command="{Binding StartProgressTestCommand}">Start</Button>
					</Grid>
					<Rectangle Fill="DarkGray" Height="1"/>
					<TextBlock Margin="5" Text="Xceed IntegerUpDown"/>
					<StackPanel Orientation="Horizontal">
						<tk:IntegerUpDown x:Name="integerUpDown" Margin="5,5,0,5" HorizontalAlignment="Left" Width="80" Value="{Binding IntegerValueTest}" />
						<Grid Margin="15,5,5,5">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0" Text="{Binding IntegerValueTest, StringFormat='IntegerValueTest: {0}'}"></TextBlock>
							<CheckBox Grid.Row="1" IsChecked="{Binding ElementName=integerUpDown, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</Grid>
					</StackPanel>
					<TextBox Margin="5" Text="TextBox"/>
					<TextBox Margin="5" IsEnabled="False" Text="TextBox (disabled)"/>
					<TextBlock Margin="5" Text="PasswordBox"/>
					<StackPanel Orientation="Horizontal" Margin="5">
						<PasswordBox a:PasswordHelper.AttachedController="{Binding UserPasswordController}" MinWidth="150"/>
						<Button Margin="5,0" Command="{Binding UpdateUserPasswordCommand}" Content="OK"/>
					</StackPanel>

					<TextBlock Margin="5"><Run Text="CommandTextBox"/></TextBlock>
					<c:CommandTextBox x:Name="commandTextBox" Command="{Binding CommandTextBoxCommand}" ButtonStyle="{DynamicResource styleButton_CommandTextBox_Green}" ButtonContent="REGISTER"/>
					<TextBlock Margin="20,5,5,5"><Run Text="CommandTextBox output:"/><Run Text="{Binding CommandTextBoxString}"/></TextBlock>
					<CheckBox Margin="5,0,5,5" IsChecked="{Binding IsEnabled, ElementName=commandTextBox, Mode=TwoWay}" Content="IsEnabled"/>
					<c:CommandTextBox Margin="5" x:Name="commandTextBox1" ButtonStyle="{DynamicResource styleButton_Arrow_Right}"/>
					<CheckBox Margin="5,0,5,5" IsChecked="{Binding IsEnabled, ElementName=commandTextBox1, Mode=TwoWay}" Content="IsEnabled"/>
					<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Arrow_Up}"/>
					<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Cross}"/>
					<TextBlock Margin="5,10,5,5"><Run Text="CommandTextBox with IsButtonFisible = False:"/></TextBlock>
					<c:CommandTextBox ButtonStyle="{DynamicResource styleButton_Cross}" IsButtonVisible="False"/>
				</StackPanel>
			</ScrollViewer>
		</Grid>
		
		<StackPanel Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical" VerticalAlignment="Top">
			<TextBlock FontWeight="Bold"><Run Text="ItemsControls"/></TextBlock>
			<TextBlock Margin="5"><Run Text="ListBox"/></TextBlock>
			<ListBox x:Name="listBoxTest" Height="150" ItemsSource="{Binding TestItemsSource}"/>
			<CheckBox Margin="3" IsChecked="{Binding IsEnabled, ElementName=listBoxTest, Mode=TwoWay}" Content="IsEnabled"/>
			<Grid>
				<!--<ContentControl Margin="5">
						<ContentControl.Style>
							<Style TargetType="ContentControl">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ContentControl">
											<Grid>
												<Path x:Name="pathInner" Stretch="Fill" Stroke="{DynamicResource brushIcon_LoadingIndicator_InnerRing}" Width="32" Height="32" RenderTransformOrigin="0.5,0.5">
													<Path.Data>
														<EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
													</Path.Data>
													<Path.RenderTransform>
														<ScaleTransform x:Name="stInner" ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
													</Path.RenderTransform>
												</Path>
												<Path x:Name="pathOuter" Stretch="Fill" Stroke="{DynamicResource brushIcon_LoadingIndicator_OuterRing}" Width="64" Height="64" RenderTransformOrigin="0.5,0.5">
													<Path.Data>
														<EllipseGeometry RadiusX="28.9492" RadiusY="28.9492" Center="50,50" />
													</Path.Data>
													<Path.RenderTransform>
														<ScaleTransform x:Name="stOuter" ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
													</Path.RenderTransform>
												</Path>
											</Grid>
											<ControlTemplate.Triggers>
												<EventTrigger RoutedEvent="Loaded">
													<EventTrigger.Actions>
														<BeginStoryboard>
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="pathInner" Storyboard.TargetProperty="Opacity" To="0.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stInner" Storyboard.TargetProperty="ScaleX" To="2.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stInner" Storyboard.TargetProperty="ScaleY" To="2.0" Duration="00:00:01" RepeatBehavior="Forever"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="pathOuter" Storyboard.TargetProperty="Opacity" To="0.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stOuter" Storyboard.TargetProperty="ScaleX" To="2.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
																<DoubleAnimation Storyboard.TargetName="stOuter" Storyboard.TargetProperty="ScaleY" To="2.0" Duration="00:00:01" RepeatBehavior="Forever" BeginTime="-00:00:00.5"></DoubleAnimation>
															</Storyboard>
														</BeginStoryboard>
													</EventTrigger.Actions>
												</EventTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ContentControl.Style>
					</ContentControl>-->
			</Grid>
			<TextBlock Margin="5"><Run Text="ComboBox"/></TextBlock>
			<ComboBox x:Name="comboBoxTest" ItemsSource="{Binding TestItemsSource}" />
			<TextBlock Margin="5"><Run Text="ComboBox (light)"/></TextBlock>
			<ComboBox Margin="3" Style="{DynamicResource styleComboBox_Light}"  ItemsSource="{Binding TestItemsSource}"/>

			<CheckBox Margin="3" IsChecked="{Binding IsEnabled, ElementName=comboBoxTest, Mode=TwoWay}" Content="IsEnabled"/>
			<TextBlock FontWeight="Bold" Margin="5" TextWrapping="Wrap">SearchAutocompleteControl (left-aligned tooltip)</TextBlock>
			<c:SearchAutocompleteControl x:Name="searchAutocomplete_String" a:ToolTipBeacon.InheritedGroupName="s_a" a:ToolTipBeacon.ToolTipTemplateKey="templateToolTip_SearchAutoComplete_LeftPlacement" a:ToolTipBeacon.PlacementPriority="Right" SearchResultRefreshCommand="{Binding ConversionSearchResultRefreshCommand}" ItemsSource="{Binding StringSearchResults}" SearchItemCommand="{Binding StringSearchItemClickCommand}" NoMatchesButtonCommand="{Binding NoMatchesFoundCommand}" SeeAllOptionsCommand="{Binding SeeMoreSearchOptionsCommand}"/>
			<Button Content="Show search input dialog" Command="{Binding ShowSearchInputBoxCommand}" CommandParameter="{StaticResource inputDialogInfo_Search}" HorizontalAlignment="Left" Margin="10,5,0,10"></Button>
			<TextBlock Margin="15,3,0,3" TextWrapping="Wrap">
					<Run Text="selected search item:"/>
					<Run Text=" "/>
					<Run Text="{Binding ClickedStringSearchItem}" FontWeight="Bold"/>
			</TextBlock>
			<CheckBox Margin="3" IsChecked="{Binding IsEnabled, ElementName=searchAutocomplete_String, Mode=TwoWay}" Content="IsEnabled"/>
			<c:SearchAutocompleteControl x:Name="searchAutocomplete_SearchItem" AutoFocusOnLoad="True" SearchPropertyBindingPath="Description"  SearchResultRefreshCommand="{Binding CustomSearchItemSearchResultRefreshCommand}" ItemsSource="{Binding CustomItemSearchResults}" SearchItemCommand="{Binding CustomSearchItemClickCommand}"/>
			<TextBlock Margin="15,3,0,3" TextWrapping="Wrap">
					<Run Text="selected search item:"/>
					<LineBreak></LineBreak>
					<Run Text="{Binding ClickedCustomSearchItem.Name}" FontWeight="Bold"/>
					<Run> </Run>
					<Run Text="{Binding ClickedCustomSearchItem.Description}" FontWeight="Normal"/>
			</TextBlock>
		</StackPanel>
		
		<StackPanel Grid.Column="2" Grid.RowSpan="3" Orientation="Vertical">
			<TextBlock Margin="5" FontWeight="Bold"><Run Text="MessageBox"/></TextBlock>
			<StackPanel Orientation="Horizontal">
				<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Exception}" Content="Simple Exception (OK)"/>
				<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Question}" Content="Simple Question (Yes/No)"/>
				<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{Binding Mbi_Warning}" Content="Simple Warning (OK)"/>
				<Button Command="{Binding ShowMessageBoxCommand}" CommandParameter="{StaticResource mbiFromResources}" Content="From Resources"/>
			</StackPanel>
			<TextBlock Margin="20,5,0,5">
					<TextBlock Text="MessageBoxResult:"/>
					<Run Text=" "/>
					<TextBlock Margin="10,0,0,0" Text="{Binding MessageBoxResult}" FontWeight="Bold"/>
					</TextBlock>
			<TextBlock Margin="5" FontWeight="Bold"><Run Text="DatePicker"/></TextBlock>
			<DatePicker x:Name="datePicker" Margin="5" SelectedDate="{Binding DateTimeTest, Mode=TwoWay}" HorizontalAlignment="Left" />
			<TextBlock Margin="5" FontWeight="Bold"><Run Text="DataGrid"/></TextBlock>
			<DataGrid Margin="5" x:Name="dataGrid" Height="200" ItemsSource="{Binding PersonsTestSource}" AutoGenerateColumns="False" c:DataGridHelper.MoveRowUpCommandOverride="{Binding PersonItemMoveUpCommand}" c:DataGridHelper.MoveRowDownCommandOverride="{Binding PersonItemMoveDownCommand}" c:DataGridHelper.RemoveRowCommandOverride="{Binding RemovePersonItemCommand}" c:DataGridHelper.ShowDefaultRemoveConfirmation="True" c:DataGridHelper.ShowRowControls="False">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Person Name" Binding="{Binding Name, Mode=TwoWay}" ElementStyle="{DynamicResource styleTextBlock_DataGridTextColumn}" EditingElementStyle="{DynamicResource styleTextBox_DataGridTextColumn}"/>
					<DataGridTextColumn Header="Internal Number" IsReadOnly="True" Binding="{Binding InternalNumber}" ElementStyle="{DynamicResource styleTextBlock_DataGridTextColumn}"/>
					<DataGridCheckBoxColumn Header="Has Medical License" IsReadOnly="False" Binding="{Binding IsMedic, Mode=TwoWay}" ElementStyle="{DynamicResource styleCheckBox_DataGridCheckBoxColumn}" EditingElementStyle="{DynamicResource styleCheckBox_DataGridCheckBoxColumn}"/>
					<DataGridComboBoxColumn Header="Personality Type" SelectedItemBinding="{Binding PersonalityType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource sourcePersonalityType}}" EditingElementStyle="{DynamicResource styleComboBox_DataGridComboBoxColumn}" ElementStyle="{DynamicResource styleComboBox_DataGridComboBoxColumn}"/>
				</DataGrid.Columns>
			</DataGrid>
			<StackPanel Margin="20,5,5,5" Orientation="Horizontal">
				<CheckBox IsChecked="{Binding ElementName=dataGrid, Path=(c:DataGridHelper.ShowRowControls), Mode=TwoWay}">ShowRowControls</CheckBox>
			</StackPanel>
			<StackPanel Orientation="Vertical" VerticalAlignment="Top">
				<TextBlock Margin="5"><Run Text="Removable items ItemsControl (with item tooltips)"/></TextBlock>
				<c:RemovableItemsItemsControl Margin="0,0,0,0" a:ToolTipBeacon.InheritedGroupName="files" ItemTemplate="{StaticResource templateRemovableItemTest}" ItemsSource="{Binding TestRemovableItemsItemsSource}" a:RemoveRequestHelper.RemoveRequestCommand="{Binding RemoveRequestTestCommand}" a:ItemsControlHelper.Orientation="Horizontal" CustomPartContentTemplate="{StaticResource templateRemovableList_CustomContent}" ItemContainerStyle="{StaticResource styleRemovableItem_Files1}"/>
				<c:RemovableItemsItemsControl Margin="0,50,0,0" a:ToolTipBeacon.InheritedGroupName="files2" ItemTemplate="{StaticResource templateRemovableItemTest}" ItemsSource="{Binding TestRemovableItemsItemsSource}" a:ItemsControlHelper.Orientation="Horizontal" a:ToolTipBeacon.PlacementPriority="Top" ItemContainerStyle="{StaticResource styleRemovableItem_Files2}"/>
			</StackPanel>
		</StackPanel>
	</Grid>
</Window>