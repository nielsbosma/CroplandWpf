<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CroplandWpf.Test"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="CroplandWpf.Test.MainWindow"
		xmlns:a="clr-namespace:CroplandWpf.Attached;assembly=CroplandWpf"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		xmlns:c="clr-namespace:CroplandWpf.Components;assembly=CroplandWpf"
		xmlns:msc="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
		WindowState="Normal"
        Title="Cropland Test App" Height="800" Width="1440"
		a:MenuHelper.ItemsSource="{Binding MenuItemsTestSource}"
		d:DesignWidth="1200"
		d:DesignHeight="1080"
		WindowStartupLocation="CenterScreen"
		Style="{DynamicResource styleWindow_Light}">
	<!--Style="{DynamicResource {x:Type Window}}"-->

	<Window.InputBindings>
		<KeyBinding Command="{Binding}" CommandParameter="asd" Gesture="Ctrl+S"></KeyBinding>
	</Window.InputBindings>

	<Window.Resources>
		<DataTemplate x:Key="templateStringTest">
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Text:"/>
				<TextBlock Text="{Binding}"/>
			</StackPanel>
		</DataTemplate>

		<DataTemplate x:Key="templateRemovableItemTest">
			<TextBlock VerticalAlignment="Center">
				<TextBlock Text="name: "></TextBlock>
				<TextBlock Text="{Binding}"></TextBlock>
			</TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="templateRemovableList_CustomContent">
			<Button Style="{DynamicResource styleButton_AddFile}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=AddNewFileTestCommand}" Margin="10,0,5,0" VerticalAlignment="Center"></Button>
		</DataTemplate>
	</Window.Resources>

	<Border>
		<Grid Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="330"/>
				<ColumnDefinition Width="300"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid Grid.Column="0" Grid.RowSpan="3">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" FontWeight="Bold">Common Controls</TextBlock>
				<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
					<StackPanel Orientation="Vertical">
						<TextBlock Margin="5">Button</TextBlock>
						<Button VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left" Content="NORMAL"/>
						<StackPanel Orientation="Horizontal">
							<Button x:Name="buttonTest" VerticalAlignment="Top" IsEnabled="False" HorizontalAlignment="Left" Margin="5" Content="DISABLED"/>
							<CheckBox Margin="24,0,0,0" IsChecked="{Binding ElementName=buttonTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<Button Margin="5" Style="{DynamicResource styleButton_AddFile}"></Button>
							<Button x:Name="buttonRemoveTest" Margin="0,5,5,5" Style="{DynamicResource styleButton_RemoveFile}"></Button>
							<CheckBox IsChecked="{Binding ElementName=buttonRemoveTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<c:HyperlinkButton x:Name="hyperlinkTest" Command="{Binding HyperlinkTestCommand}" CommandParameter="{Binding HyperlinkTest}">Hyperlink</c:HyperlinkButton>
							<CheckBox Margin="24,0,0,0" IsChecked="{Binding ElementName=hyperlinkTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<c:HyperlinkButton IsUnderlined="False" HorizontalAlignment="Left">no underline</c:HyperlinkButton>
						<Button Margin="5" HorizontalAlignment="Left" Style="{DynamicResource styleButton_RemoveRequest}"></Button>
						<Rectangle Fill="DarkGray" Height="1"/>
						<CheckBox Margin="5" FontSize="9.5pt" Content="CheckBox"/>
						<CheckBox Margin="5" IsEnabled="False" Content="CheckBox (disabled)"/>
						<Rectangle Fill="DarkGray" Height="1"/>
						<RadioButton Margin="5,5,5,3" GroupName="rbtest" IsChecked="True" Content="RadioButton 1 (group: rbtest)"/>
						<RadioButton Margin="5,0,5,5" GroupName="rbtest" Content="RadioButton 2 (group: rbtest)"/>
						<RadioButton Margin="5,0,5,5" IsEnabled="False" Content="RadioButton 3 (disabled)"/>
						<StackPanel Orientation="Horizontal">
							<RadioButton x:Name="radioButtonTest" Margin="5,0,5,5" IsEnabled="False" IsChecked="True" Content="RadioButton 4 (checked/disabled)"/>
							<CheckBox Margin="5,0" IsChecked="{Binding ElementName=radioButtonTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						</StackPanel>
						<Rectangle Fill="DarkGray" Height="1"/>
						<TextBox Margin="5" Text="TextBox"/>
						<TextBox Margin="5" IsEnabled="False" Text="TextBox (disabled)"/>
						<TextBlock Margin="5">CommandTextBox</TextBlock>
						<c:CommandTextBox x:Name="commandTextBox" Command="{Binding CommandTextBoxCommand}" ButtonStyle="{DynamicResource styleButton_CommandTextBox_Green}" ButtonContent="REGISTER"></c:CommandTextBox>
						<TextBlock Margin="20,5,5,5"><Run>CommandTextBox output:</Run><Run Text="{Binding CommandTextBoxString}"></Run></TextBlock>
						<CheckBox Margin="5,0,5,5" IsChecked="{Binding ElementName=commandTextBox, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						<c:CommandTextBox Margin="5" x:Name="commandTextBox1" ButtonStyle="{DynamicResource styleButton_Arrow_Right}"></c:CommandTextBox>
						<CheckBox Margin="5,0,5,5" IsChecked="{Binding ElementName=commandTextBox1, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
						<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Arrow_Up}"></c:CommandTextBox>
						<c:CommandTextBox Margin="5" ButtonStyle="{DynamicResource styleButton_Cross}"></c:CommandTextBox>
						<TextBlock Margin="5,10,5,5">CommandTextBox with IsButtonFisible = False:</TextBlock>
						<c:CommandTextBox ButtonStyle="{DynamicResource styleButton_Cross}" IsButtonVisible="False"></c:CommandTextBox>
					</StackPanel>
				</ScrollViewer>
			</Grid>
			<StackPanel Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical" VerticalAlignment="Top">
				<TextBlock FontWeight="Bold">ItemsControls</TextBlock>
				<TextBlock Margin="5">ListBox</TextBlock>
				<ListBox x:Name="listBoxTest" Height="150" ItemsSource="{Binding TestItemsSource}"/>
				<CheckBox Margin="3" IsChecked="{Binding ElementName=listBoxTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
				<TextBlock Margin="5">ComboBox</TextBlock>
				<ComboBox x:Name="comboBoxTest" ItemsSource="{Binding TestItemsSource}" />
				<CheckBox Margin="3" IsChecked="{Binding ElementName=comboBoxTest, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
				<TextBlock Margin="5">SearchAutocompleteControl</TextBlock>
				<c:SearchAutocompleteControl x:Name="searchAutocomplete" SearchResultRefreshCommand="{Binding ConversionSearchResultRefreshCommand}" ItemsSource="{Binding SearchResults}" SearchItemCommand="{Binding SearchItemClickCommand}"></c:SearchAutocompleteControl>
				<TextBlock Margin="15,3,0,3">
					<Run>clicked search item:</Run>
					<Run Text="{Binding ClickedSearchItem}" FontWeight="Bold"></Run>
				</TextBlock>
				<CheckBox Margin="3" IsChecked="{Binding ElementName=searchAutocomplete, Path=IsEnabled, Mode=TwoWay}">IsEnabled</CheckBox>
			</StackPanel>
			<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Top">
				<TextBlock Margin="5">Removable items ItemsControl</TextBlock>
				<c:RemovableItemsItemsControl ItemTemplate="{StaticResource templateRemovableItemTest}" ItemsSource="{Binding TestRemovableItemsItemsSource}" a:RemoveRequestHelper.RemoveRequestCommand="{Binding RemoveRequestTestCommand}" a:ItemsControlHelper.Orientation="Horizontal" CustomPartContentTemplate="{StaticResource templateRemovableList_CustomContent}"></c:RemovableItemsItemsControl>
			</StackPanel>
			<StackPanel Grid.Column="2" Grid.RowSpan="3" Orientation="Vertical">
				<TextBlock Margin="5" FontWeight="Bold">DatePicker</TextBlock>
				<DatePicker x:Name="datePicker" Margin="5" SelectedDate="{Binding DateTimeTest, Mode=TwoWay}" HorizontalAlignment="Left" ></DatePicker>
				<DataGrid MinHeight="150" Style="{DynamicResource DataGridStyle1}">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Name"></DataGridTextColumn>
					</DataGrid.Columns>
				</DataGrid>
				<DataGridCell Style="{DynamicResource DataGridCellStyle1}">as</DataGridCell>
				<DataGridRow Style="{DynamicResource DataGridRowStyle1}"></DataGridRow>
			</StackPanel>
		</Grid>
	</Border>
</Window>